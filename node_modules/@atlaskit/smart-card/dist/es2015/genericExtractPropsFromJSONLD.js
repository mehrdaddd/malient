export function genericExtractPropsFromJSONLD(options) {
    var defaultExtractorFunction = options.defaultExtractorFunction, extractorPrioritiesByType = options.extractorPrioritiesByType, extractorFunctionsByType = options.extractorFunctionsByType, json = options.json;
    if (json) {
        var type = json['@type'];
        if (type && Array.isArray(type)) {
            var highestPriority = 0;
            var highestPriorityExtractorFunction = defaultExtractorFunction;
            for (var _i = 0, type_1 = type; _i < type_1.length; _i++) {
                var t = type_1[_i];
                if (extractorPrioritiesByType[t] > highestPriority) {
                    highestPriority = extractorPrioritiesByType[t];
                    highestPriorityExtractorFunction = extractorFunctionsByType[t];
                }
            }
            return highestPriorityExtractorFunction(json);
        }
        if (type && extractorFunctionsByType[type]) {
            return extractorFunctionsByType[type](json);
        }
    }
    return defaultExtractorFunction(json);
}
//# sourceMappingURL=genericExtractPropsFromJSONLD.js.map