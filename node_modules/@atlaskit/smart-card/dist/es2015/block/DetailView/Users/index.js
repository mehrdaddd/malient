import * as tslib_1 from "tslib";
import * as React from 'react';
import { AvatarGroup } from '@atlaskit/avatar';
import { Wrapper } from './styled';
export var maxAvatarCount = 5;
var Users = /** @class */ (function (_super) {
    tslib_1.__extends(Users, _super);
    function Users() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /* prevent the parent link handler from opening a URL when clicked */
        _this.handleAvatarClick = function (_a) {
            var event = _a.event;
            event.preventDefault();
            event.stopPropagation();
        };
        /* prevent the parent link handler from opening a URL when clicked */
        _this.handleMoreClick = function (event) {
            event.preventDefault();
            event.stopPropagation();
        };
        return _this;
    }
    Users.prototype.render = function () {
        var _a = this.props.users, users = _a === void 0 ? [] : _a;
        if (users.length === 0) {
            return null;
        }
        return (React.createElement(Wrapper, null,
            React.createElement(AvatarGroup, { maxCount: maxAvatarCount, appearance: "stack", size: "small", data: users.map(function (user) { return ({
                    name: user.name,
                    src: user.icon,
                    size: 'small',
                }); }), onAvatarClick: this.handleAvatarClick, onMoreClick: this.handleMoreClick })));
    };
    return Users;
}(React.Component));
export default Users;
//# sourceMappingURL=index.js.map