import * as tslib_1 from "tslib";
import * as React from 'react';
import Avatar from '@atlaskit/avatar';
import Tooltip from '@atlaskit/tooltip';
import { IconImage } from '@atlaskit/media-ui';
import Users from './Users';
import Widgets from './Widgets';
import { ContentWrapper, LeftWrapper, BodyWrapper, TopWrapper, BottomWrapper, CopyWrapper, Title, Description, Thumbnail, } from './styled';
var DetailView = /** @class */ (function (_super) {
    tslib_1.__extends(DetailView, _super);
    function DetailView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DetailView.prototype.renderIcon = function () {
        var icon = this.props.icon;
        if (!icon) {
            return null;
        }
        // TODO: handle if there is an error loading the image -> show the placeholder
        return (React.createElement(LeftWrapper, null,
            React.createElement(Tooltip, { content: icon.tooltip },
                React.createElement(IconImage, { src: icon.url, size: 24 }))));
    };
    DetailView.prototype.renderThumbnail = function () {
        var thumbnail = this.props.thumbnail;
        if (!thumbnail) {
            return null;
        }
        // TODO: handle if there is an error loading the image -> show the placeholder
        return (React.createElement(LeftWrapper, null,
            React.createElement(Thumbnail, { src: thumbnail })));
    };
    DetailView.prototype.renderUser = function () {
        var user = this.props.user;
        if (!user) {
            return null;
        }
        return (React.createElement(LeftWrapper, null,
            React.createElement(Avatar, { size: "medium", src: user.icon, name: user.name })));
    };
    DetailView.prototype.render = function () {
        var _a = this.props, title = _a.title, description = _a.description, icon = _a.icon, thumbnail = _a.thumbnail, user = _a.user, users = _a.users, details = _a.details, actions = _a.actions;
        return (React.createElement(ContentWrapper, null,
            React.createElement(BodyWrapper, null,
                React.createElement(TopWrapper, null,
                    this.renderIcon(),
                    !icon && this.renderUser(),
                    !icon && !user && this.renderThumbnail(),
                    React.createElement(CopyWrapper, null,
                        React.createElement(Tooltip, { content: title ? title.tooltip : undefined },
                            React.createElement(Title, null, title ? title.text : undefined)),
                        React.createElement(Tooltip, { content: description ? description.tooltip : undefined },
                            React.createElement(Description, null, description ? description.text : undefined))),
                    actions),
                React.createElement(BottomWrapper, { padLeft: Boolean(icon || thumbnail || user) },
                    React.createElement(Widgets, { details: details }),
                    React.createElement(Users, { users: users })))));
    };
    return DetailView;
}(React.Component));
export { DetailView };
//# sourceMappingURL=index.js.map