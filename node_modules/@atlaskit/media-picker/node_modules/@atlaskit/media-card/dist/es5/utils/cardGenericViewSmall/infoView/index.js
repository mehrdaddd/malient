"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var styled_1 = require("./styled");
var InfoView = /** @class */ (function (_super) {
    tslib_1.__extends(InfoView, _super);
    function InfoView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(InfoView.prototype, "hasTitle", {
        get: function () {
            var _a = this.props, title = _a.title, isLoading = _a.isLoading;
            return Boolean(title) || Boolean(isLoading);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InfoView.prototype, "hasBody", {
        get: function () {
            var _a = this.props, icon = _a.icon, subtitle = _a.subtitle, isLoading = _a.isLoading;
            return Boolean(icon) || Boolean(subtitle) || Boolean(isLoading);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InfoView.prototype, "valign", {
        get: function () {
            if (this.hasTitle && this.hasBody) {
                return undefined;
            }
            else if (this.hasTitle) {
                return 'top';
            }
            else if (this.hasBody) {
                return 'bottom';
            }
        },
        enumerable: true,
        configurable: true
    });
    InfoView.prototype.render = function () {
        var _a = this.props, title = _a.title, subtitle = _a.subtitle, icon = _a.icon, isLink = _a.isLink, isLoading = _a.isLoading;
        return (React.createElement(styled_1.Wrapper, { valign: this.valign },
            this.hasTitle && React.createElement(styled_1.Title, { className: "title" }, title),
            this.hasBody && (React.createElement(styled_1.Body, null,
                !isLoading && icon ? React.createElement(styled_1.Icon, null, icon) : null,
                React.createElement(styled_1.Subtitle, { isLink: isLink, className: "subtitle" }, subtitle)))));
    };
    return InfoView;
}(React.Component));
exports.InfoView = InfoView;
//# sourceMappingURL=index.js.map