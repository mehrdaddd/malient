/// <reference types="react" />
import { Component } from 'react';
import { Observable, Subscription } from 'rxjs';
import { MediaItemType, FileDetails, LinkDetails, UrlPreview, DataUriService, ImageResizeMode } from '@atlaskit/media-core';
import { SharedCardProps, CardEventProps, CardStatus } from '..';
import { Provider } from './card';
export interface MediaCardProps extends SharedCardProps, CardEventProps {
    readonly provider: Provider;
    readonly mediaItemType?: MediaItemType;
    readonly dataURIService?: DataUriService;
    readonly resizeMode?: ImageResizeMode;
    readonly preview?: string;
    readonly disableOverlay?: boolean;
}
export interface MediaCardState {
    readonly subscription?: Subscription;
    readonly status: CardStatus;
    readonly metadata?: FileDetails | LinkDetails | UrlPreview;
    readonly error?: Error;
}
export declare class MediaCard extends Component<MediaCardProps, MediaCardState> {
    state: MediaCardState;
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: MediaCardProps): void;
    componentWillUnmount(): void;
    private shouldUpdateState(nextProps);
    private isMediaItem(mediaItem);
    observable: (props: MediaCardProps) => Observable<FileDetails | LinkDetails | UrlPreview>;
    private stateToCardProcessingStatus();
    private onLoadingChange(loadingChange);
    private updateState(props);
    private unsubscribe();
    private onRetry;
    render(): JSX.Element;
}
