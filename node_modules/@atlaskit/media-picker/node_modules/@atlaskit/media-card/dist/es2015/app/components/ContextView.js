import * as tslib_1 from "tslib";
/* tslint:disable:variable-name */
import * as React from 'react';
import Avatar from '@atlaskit/avatar';
import { Wrapper, Text, IconWrapper } from '../styled/ContextView';
var ContextView = /** @class */ (function (_super) {
    tslib_1.__extends(ContextView, _super);
    function ContextView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ContextView.prototype.renderIcon = function () {
        var icon = this.props.icon;
        if (!icon) {
            return null;
        }
        return (React.createElement(IconWrapper, null,
            React.createElement(Avatar, { appearance: "square", size: "small", src: icon.url, alt: icon.label })));
    };
    ContextView.prototype.renderText = function () {
        var _a = this.props, text = _a.text, isInversed = _a.isInversed;
        return React.createElement(Text, { isInversed: isInversed }, text);
    };
    ContextView.prototype.render = function () {
        return (React.createElement(Wrapper, null,
            this.renderIcon(),
            this.renderText()));
    };
    return ContextView;
}(React.Component));
export { ContextView };
//# sourceMappingURL=ContextView.js.map