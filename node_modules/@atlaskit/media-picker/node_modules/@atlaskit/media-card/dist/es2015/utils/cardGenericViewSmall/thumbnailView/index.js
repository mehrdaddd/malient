import * as tslib_1 from "tslib";
import * as React from 'react';
import FileIcon from '@atlaskit/icon/glyph/file';
import LinkIcon from '@atlaskit/icon/glyph/link';
import { MediaImage } from '../../../utils/mediaImage';
import { RoundedBackground, LoadingPlaceholder, EmptyPlaceholder, } from './styled';
var ThumbnailView = /** @class */ (function (_super) {
    tslib_1.__extends(ThumbnailView, _super);
    function ThumbnailView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ThumbnailView.prototype.render = function () {
        var _a = this.props, type = _a.type, url = _a.url, isLoading = _a.isLoading;
        if (isLoading) {
            return (React.createElement(RoundedBackground, null,
                React.createElement(LoadingPlaceholder, null)));
        }
        else if (url) {
            return (React.createElement(RoundedBackground, null,
                React.createElement(MediaImage, { dataURI: url, fadeIn: isLoading })));
        }
        else {
            return (React.createElement(RoundedBackground, null,
                React.createElement(EmptyPlaceholder, null, type === 'link' ? (React.createElement(LinkIcon, { label: "link", size: "medium" })) : (React.createElement(FileIcon, { label: "file", size: "medium" })))));
        }
    };
    return ThumbnailView;
}(React.Component));
export { ThumbnailView };
//# sourceMappingURL=index.js.map