/// <reference types="react" />
import { Component } from 'react';
import { Context, MediaItemProvider, UrlPreviewProvider, ImageResizeMode } from '@atlaskit/media-core';
import { SharedCardProps, CardEventProps, CardAnalyticsContext } from '../..';
export declare type Identifier = UrlPreviewIdentifier | LinkIdentifier | FileIdentifier;
export declare type Provider = MediaItemProvider | UrlPreviewProvider;
export interface FileIdentifier {
    readonly mediaItemType: 'file';
    readonly id: string;
    readonly occurrenceKey?: string;
    readonly collectionName?: string;
}
export interface LinkIdentifier {
    readonly mediaItemType: 'link';
    readonly id: string;
    readonly occurrenceKey?: string;
    readonly collectionName: string;
}
export interface UrlPreviewIdentifier {
    readonly mediaItemType: 'link';
    readonly url: string;
}
export interface CardProps extends SharedCardProps, CardEventProps {
    readonly context: Context;
    readonly identifier: Identifier;
    readonly isLazy?: boolean;
    readonly resizeMode?: ImageResizeMode;
    readonly disableOverlay?: boolean;
}
export declare class Card extends Component<CardProps, {}> {
    static defaultProps: {
        appearance: string;
        resizeMode: string;
        isLazy: boolean;
        disableOverlay: boolean;
    };
    private provider;
    private dataURIService?;
    constructor(props: any);
    componentWillReceiveProps(nextProps: any): void;
    private isUrlPreviewIdentifier(identifier);
    private updateProvider(context, identifier);
    private updateDataUriService(context, identifier);
    readonly placeholder: JSX.Element;
    private readonly preview;
    readonly analyticsContext: CardAnalyticsContext;
    render(): JSX.Element;
    private readonly mediaItemType;
}
