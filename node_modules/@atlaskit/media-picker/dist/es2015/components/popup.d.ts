import { Context } from '@atlaskit/media-core';
import { UploadComponent, UploadEventEmitter } from './component';
import { MediaPickerContext } from '../domain/context';
import { UploadParams } from '../domain/config';
import { UploadEventPayloadMap } from '../domain/uploadEvent';
export interface PopupConfig {
    readonly container?: HTMLElement;
    readonly uploadParams: UploadParams;
    readonly useNewUploadService?: boolean;
}
export declare const USER_RECENTS_COLLECTION = "recents";
export interface PopupConstructor {
    new (analyticsContext: MediaPickerContext, context: Context, config: PopupConfig): Popup;
}
export declare type PopupUploadEventPayloadMap = UploadEventPayloadMap & {
    readonly closed: undefined;
};
export interface PopupUploadEventEmitter extends UploadEventEmitter {
    emitClosed(): void;
}
export declare class Popup extends UploadComponent<PopupUploadEventPayloadMap> implements PopupUploadEventEmitter {
    readonly context: Context;
    private readonly container;
    private readonly store;
    private uploadParams;
    constructor(anlyticsContext: MediaPickerContext, context: Context, {container, uploadParams, useNewUploadService}: PopupConfig);
    show(): Promise<void>;
    cancel(uniqueIdentifier?: string): void;
    teardown(): void;
    hide(): void;
    setUploadParams(uploadParams: UploadParams): void;
    emitClosed(): void;
    private renderPopup();
}
