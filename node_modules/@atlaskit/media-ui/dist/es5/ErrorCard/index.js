"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var button_1 = require("@atlaskit/button");
var warning_1 = require("@atlaskit/icon/glyph/warning");
var util_shared_styles_1 = require("@atlaskit/util-shared-styles");
var CardFrame_1 = require("../CardFrame");
var icons_1 = require("./icons");
var styled_1 = require("./styled");
var ErrorCard = /** @class */ (function (_super) {
    tslib_1.__extends(ErrorCard, _super);
    function ErrorCard() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ErrorCard.prototype.render = function () {
        var _a = this.props, hasPreview = _a.hasPreview, minWidth = _a.minWidth, maxWidth = _a.maxWidth, onRetry = _a.onRetry;
        var icon = (React.createElement(warning_1.default, { label: "error", size: "small", primaryColor: util_shared_styles_1.akColorY400 }));
        var retryButton = onRetry ? (React.createElement(button_1.default, { onClick: onRetry }, "Try again")) : null;
        return (React.createElement(CardFrame_1.CardFrame, { icon: icon, text: "", minWidth: minWidth, maxWidth: maxWidth },
            React.createElement(styled_1.ErrorWrapper, { hasPreview: hasPreview },
                React.createElement(styled_1.ErrorContainer, { hasPreview: hasPreview },
                    hasPreview ? React.createElement(styled_1.ErrorImage, { src: icons_1.linkErrorIcon, alt: "Error" }) : null,
                    React.createElement(styled_1.ErrorMessage, { hasPreview: hasPreview }, "We stumbled a bit here."),
                    retryButton))));
    };
    return ErrorCard;
}(React.Component));
exports.ErrorCard = ErrorCard;
//# sourceMappingURL=index.js.map