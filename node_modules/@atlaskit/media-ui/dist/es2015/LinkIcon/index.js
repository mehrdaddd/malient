import * as tslib_1 from "tslib";
import * as React from 'react';
import ImageLoader from 'react-render-image';
import LinkGlyph from '@atlaskit/icon/glyph/link';
import { IconImage } from '../IconImage';
export var DefaultIcon = function () { return React.createElement(LinkGlyph, { label: "icon", size: "small" }); };
export var CustomIcon = function (_a) {
    var url = _a.url, alt = _a.alt;
    return (React.createElement(IconImage, { src: url, alt: alt }));
};
var LinkIcon = /** @class */ (function (_super) {
    tslib_1.__extends(LinkIcon, _super);
    function LinkIcon() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LinkIcon.prototype.render = function () {
        var src = this.props.src;
        if (!src) {
            return React.createElement(DefaultIcon, null);
        }
        return (React.createElement(ImageLoader, { src: src, loading: React.createElement(DefaultIcon, null), loaded: React.createElement(CustomIcon, { url: src, alt: "" }), errored: React.createElement(DefaultIcon, null) }));
    };
    return LinkIcon;
}(React.Component));
export { LinkIcon };
//# sourceMappingURL=index.js.map