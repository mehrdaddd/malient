"use strict";
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
exports.FETCH_CONVERSATIONS_REQUEST = 'fetchConversationsRequest';
exports.FETCH_CONVERSATIONS_SUCCESS = 'fetchConversationsSuccess';
exports.ADD_COMMENT_REQUEST = 'addCommentRequest';
exports.ADD_COMMENT_SUCCESS = 'addCommentSuccess';
exports.ADD_COMMENT_ERROR = 'addCommentError';
exports.DELETE_COMMENT_REQUEST = 'deleteCommentRequest';
exports.DELETE_COMMENT_SUCCESS = 'deleteCommentSuccess';
exports.DELETE_COMMENT_ERROR = 'deleteCommentError';
exports.UPDATE_COMMENT_REQUEST = 'updateCommentRequest';
exports.UPDATE_COMMENT_SUCCESS = 'updateCommentSuccess';
exports.UPDATE_COMMENT_ERROR = 'updateCommentError';
exports.HIGHLIGHT_COMMENT = 'highlightComment';
exports.REVERT_COMMENT = 'revertComment';
exports.UPDATE_USER_SUCCESS = 'updateUserSuccess';
exports.CREATE_CONVERSATION_REQUEST = 'createConversationRequest';
exports.CREATE_CONVERSATION_SUCCESS = 'createConversationSuccess';
exports.CREATE_CONVERSATION_ERROR = 'createConversationError';
exports.addComment = function (conversationId, parentId, value, localId, provider) {
    if (localId === void 0) { localId = undefined; }
    return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            provider.addComment(conversationId, parentId, value, localId);
            return [2 /*return*/];
        });
    }); };
};
exports.updateComment = function (conversationId, commentId, value, provider) { return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
    return tslib_1.__generator(this, function (_a) {
        provider.updateComment(conversationId, commentId, value);
        return [2 /*return*/];
    });
}); }; };
exports.deleteComment = function (conversationId, commentId, provider) { return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
    return tslib_1.__generator(this, function (_a) {
        provider.deleteComment(conversationId, commentId);
        return [2 /*return*/];
    });
}); }; };
exports.revertComment = function (conversationId, commentId, provider) { return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
    return tslib_1.__generator(this, function (_a) {
        provider.revertComment(conversationId, commentId);
        return [2 /*return*/];
    });
}); }; };
exports.updateUser = function (user, provider) { return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
    return tslib_1.__generator(this, function (_a) {
        provider.updateUser(user);
        return [2 /*return*/];
    });
}); }; };
exports.createConversation = function (localId, containerId, value, meta, provider) { return function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
    return tslib_1.__generator(this, function (_a) {
        provider.create(localId, containerId, value, meta);
        return [2 /*return*/];
    });
}); }; };
//# sourceMappingURL=actions.js.map