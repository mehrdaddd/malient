"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var editor_common_1 = require("@atlaskit/editor-common");
var main_1 = require("./pm-plugins/main");
var input_rules_1 = require("./pm-plugins/input-rules");
var keymap_1 = require("./pm-plugins/keymap");
var ToolbarMention_1 = require("./ui/ToolbarMention");
var MentionPicker_1 = require("./ui/MentionPicker");
var mentionsPlugin = {
    nodes: function () {
        return [{ name: 'mention', node: editor_common_1.mention, rank: 1200 }];
    },
    marks: function () {
        return [{ name: 'mentionQuery', mark: editor_common_1.mentionQuery, rank: 1200 }];
    },
    pmPlugins: function () {
        return [
            {
                rank: 300,
                plugin: function (_a) {
                    var providerFactory = _a.providerFactory;
                    return main_1.createPlugin(providerFactory);
                },
            },
            { rank: 310, plugin: function (_a) {
                    var schema = _a.schema;
                    return input_rules_1.default(schema);
                } },
            { rank: 320, plugin: function (_a) {
                    var schema = _a.schema;
                    return keymap_1.default(schema);
                } },
        ];
    },
    contentComponent: function (_a) {
        var editorView = _a.editorView, providerFactory = _a.providerFactory, popupsMountPoint = _a.popupsMountPoint, popupsBoundariesElement = _a.popupsBoundariesElement, popupsScrollableElement = _a.popupsScrollableElement;
        var renderNode = function (providers) {
            return (React.createElement(MentionPicker_1.default, { editorView: editorView, pluginKey: main_1.mentionPluginKey, mentionProvider: providers.mentionProvider, contextIdentifierProvider: providers.contextIdentifierProvider, presenceProvider: providers.presenceProvider, popupsMountPoint: popupsMountPoint, popupsBoundariesElement: popupsBoundariesElement, popupsScrollableElement: popupsScrollableElement }));
        };
        return (React.createElement(editor_common_1.WithProviders, { providerFactory: providerFactory, providers: [
                'mentionProvider',
                'presenceProvider',
                'contextIdentifierProvider',
            ], renderNode: renderNode }));
    },
    secondaryToolbarComponent: function (_a) {
        var editorView = _a.editorView, disabled = _a.disabled;
        return (React.createElement(ToolbarMention_1.default, { editorView: editorView, pluginKey: main_1.mentionPluginKey, isDisabled: disabled, isReducedSpacing: true }));
    },
};
exports.default = mentionsPlugin;
//# sourceMappingURL=index.js.map