import { Node as PmNode } from 'prosemirror-model';
import { EditorView, NodeView } from 'prosemirror-view';
import { EventDispatcher } from '../../../event-dispatcher';
import ContentNodeView from '../../../nodeviews/contentNodeView';
export interface Props {
    node: PmNode;
    view: EditorView;
    allowColumnResizing: boolean;
    cellMinWidth?: number;
    eventDispatcher?: EventDispatcher;
    getPos: () => number | undefined;
}
export default class TableView extends ContentNodeView implements NodeView {
    private node;
    private domRef;
    private props;
    constructor(props: Props);
    readonly dom: HTMLElement | null;
    update(node: PmNode, decorations: any): boolean;
    render(): void;
    ignoreMutation(record: MutationRecord): boolean;
    destroy(): void;
}
