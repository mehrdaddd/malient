"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var ReactDOM = require("react-dom");
var styled_components_1 = require("styled-components");
var util_shared_styles_1 = require("@atlaskit/util-shared-styles");
var info_1 = require("@atlaskit/icon/glyph/editor/info");
var success_1 = require("@atlaskit/icon/glyph/editor/success");
var note_1 = require("@atlaskit/icon/glyph/editor/note");
var warning_1 = require("@atlaskit/icon/glyph/editor/warning");
var error_1 = require("@atlaskit/icon/glyph/editor/error");
var nodeviews_1 = require("../../../nodeviews");
var panelColor = {
    info: util_shared_styles_1.akColorB50,
    note: util_shared_styles_1.akColorP50,
    success: util_shared_styles_1.akColorG50,
    warning: util_shared_styles_1.akColorY50,
    error: util_shared_styles_1.akColorR50,
};
var iconColor = {
    info: util_shared_styles_1.akColorB400,
    note: util_shared_styles_1.akColorP400,
    success: util_shared_styles_1.akColorG400,
    warning: util_shared_styles_1.akColorY400,
    error: util_shared_styles_1.akColorR400,
};
var panelIcons = {
    info: info_1.default,
    success: success_1.default,
    note: note_1.default,
    warning: warning_1.default,
    error: error_1.default,
};
// tslint:disable-next-line:variable-name
var Wrapper = styled_components_1.default.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  border-radius: ", ";\n  margin: ", "px 0;\n  padding: ", "px;\n"], ["\n  border-radius: ", ";\n  margin: ", "px 0;\n  padding: ", "px;\n"])), util_shared_styles_1.akBorderRadius, util_shared_styles_1.akGridSizeUnitless / 2, util_shared_styles_1.akGridSizeUnitless);
// tslint:disable-next-line:variable-name
var ContentWrapper = styled_components_1.default.div(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["\n  margin: 1px 0 1px ", "px;\n"], ["\n  margin: 1px 0 1px ", "px;\n"])), util_shared_styles_1.akGridSizeUnitless * 4);
// tslint:disable-next-line:variable-name
var IconWrapper = styled_components_1.default.span(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["\n  height: 24px;\n  width: 24px;\n  position: absolute;\n"], ["\n  height: 24px;\n  width: 24px;\n  position: absolute;\n"])));
var Panel = /** @class */ (function (_super) {
    tslib_1.__extends(Panel, _super);
    function Panel(node, view, getPos) {
        var _this = _super.call(this, node, view) || this;
        _this.node = node;
        _this.panelType = node.attrs.panelType;
        _this.renderReactComponent();
        return _this;
    }
    Panel.prototype.renderReactComponent = function () {
        var panelType = this.panelType;
        this.domRef = document.createElement('div');
        this.domRef.setAttribute('data-panel-type', this.panelType);
        // tslint:disable-next-line:variable-name
        var Icon = panelIcons[panelType];
        ReactDOM.render(React.createElement(Wrapper, { style: { background: panelColor[panelType] } },
            React.createElement(IconWrapper, { style: { color: iconColor[panelType] } },
                React.createElement(Icon, { label: "Panel " + panelType })),
            React.createElement(ContentWrapper, { innerRef: this.handleRef })), this.domRef);
    };
    Object.defineProperty(Panel.prototype, "dom", {
        get: function () {
            return this.domRef;
        },
        enumerable: true,
        configurable: true
    });
    Panel.prototype.update = function (node) {
        if (node.attrs.panelType !== this.node.attrs.panelType ||
            node.type !== this.node.type) {
            return false;
        }
        return true;
    };
    Panel.prototype.destroy = function () {
        ReactDOM.unmountComponentAtNode(this.domRef);
        this.domRef = undefined;
        _super.prototype.destroy.call(this);
    };
    return Panel;
}(nodeviews_1.ContentNodeView));
exports.panelNodeView = function (node, view, getPos) {
    return new Panel(node, view, getPos);
};
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=panel.js.map