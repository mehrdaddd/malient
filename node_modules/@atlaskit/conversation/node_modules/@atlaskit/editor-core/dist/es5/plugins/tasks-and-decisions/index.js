"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var styled_components_1 = require("styled-components");
var editor_common_1 = require("@atlaskit/editor-common");
var main_1 = require("./pm-plugins/main");
var paste_plugin_1 = require("./pm-plugins/paste-plugin");
var input_rules_1 = require("./pm-plugins/input-rules");
var keymaps_1 = require("./pm-plugins/keymaps");
var ToolbarDecision_1 = require("./ui/ToolbarDecision");
var ToolbarTask_1 = require("./ui/ToolbarTask");
// tslint:disable-next-line:variable-name
var TaskDecisionToolbarGroup = styled_components_1.default.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  display: flex;\n"], ["\n  display: flex;\n"])));
var tasksAndDecisionsPlugin = {
    nodes: function () {
        return [
            { name: 'decisionList', node: editor_common_1.decisionList, rank: 1800 },
            { name: 'decisionItem', node: editor_common_1.decisionItem, rank: 1900 },
            { name: 'taskList', node: editor_common_1.taskList, rank: 2000 },
            { name: 'taskItem', node: editor_common_1.taskItem, rank: 2100 },
        ];
    },
    pmPlugins: function () {
        return [
            { rank: 50, plugin: function () { return paste_plugin_1.default(); } },
            {
                rank: 500,
                plugin: function (_a) {
                    var schema = _a.schema, props = _a.props, dispatch = _a.dispatch, providerFactory = _a.providerFactory;
                    var delegateAnalyticsEvent = props.delegateAnalyticsEvent;
                    return main_1.createPlugin({ delegateAnalyticsEvent: delegateAnalyticsEvent }, providerFactory);
                },
            },
            { rank: 510, plugin: function (_a) {
                    var schema = _a.schema;
                    return input_rules_1.default(schema);
                } },
            { rank: 9800, plugin: function (_a) {
                    var schema = _a.schema;
                    return keymaps_1.default(schema);
                } },
        ];
    },
    secondaryToolbarComponent: function (_a) {
        var editorView = _a.editorView, disabled = _a.disabled;
        return (React.createElement(TaskDecisionToolbarGroup, null,
            React.createElement(ToolbarDecision_1.default, { editorView: editorView, isDisabled: disabled, isReducedSpacing: true }),
            React.createElement(ToolbarTask_1.default, { editorView: editorView, isDisabled: disabled, isReducedSpacing: true })));
    },
};
exports.default = tasksAndDecisionsPlugin;
var templateObject_1;
//# sourceMappingURL=index.js.map