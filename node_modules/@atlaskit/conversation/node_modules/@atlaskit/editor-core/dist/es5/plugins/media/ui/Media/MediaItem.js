"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_1 = require("react");
var editor_common_1 = require("@atlaskit/editor-common");
var MediaComponent_1 = require("./MediaComponent");
var MediaItem = /** @class */ (function (_super) {
    tslib_1.__extends(MediaItem, _super);
    function MediaItem(props) {
        var _this = _super.call(this, props) || this;
        _this.renderWithProvider = function (providers) {
            var _a = _this.props, id = _a.id, type = _a.type, collection = _a.collection, cardDimensions = _a.cardDimensions, onClick = _a.onClick, onDelete = _a.onDelete, resizeMode = _a.resizeMode, appearance = _a.appearance, stateManagerFallback = _a.stateManagerFallback, selected = _a.selected, tempId = _a.tempId, url = _a.url, onExternalImageLoaded = _a.onExternalImageLoaded, disableOverlay = _a.disableOverlay;
            return (React.createElement(MediaComponent_1.default, { id: id, tempId: tempId, mediaProvider: providers.mediaProvider, type: type, collection: collection, cardDimensions: cardDimensions, resizeMode: resizeMode, onDelete: onDelete, onClick: onClick, appearance: appearance, stateManagerFallback: stateManagerFallback, selected: selected, url: url, onExternalImageLoaded: onExternalImageLoaded, disableOverlay: disableOverlay }));
        };
        _this.providerFactory = props.providers || new editor_common_1.ProviderFactory();
        return _this;
    }
    MediaItem.prototype.componentWillUnmount = function () {
        if (!this.props.providers) {
            // new ProviderFactory is created if no `providers` has been set
            // in this case when component is unmounted it's safe to destroy this providerFactory
            this.providerFactory.destroy();
        }
    };
    MediaItem.prototype.render = function () {
        return (React.createElement(editor_common_1.WithProviders, { providers: ['mediaProvider'], providerFactory: this.providerFactory, renderNode: this.renderWithProvider }));
    };
    return MediaItem;
}(react_1.PureComponent));
exports.default = MediaItem;
//# sourceMappingURL=MediaItem.js.map