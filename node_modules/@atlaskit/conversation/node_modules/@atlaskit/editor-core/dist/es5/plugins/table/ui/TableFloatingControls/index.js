"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_1 = require("react");
var CornerControls_1 = require("./CornerControls");
var RowControls_1 = require("./RowControls");
var styles_1 = require("./styles");
var TableFloatingControls = /** @class */ (function (_super) {
    tslib_1.__extends(TableFloatingControls, _super);
    function TableFloatingControls() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            scroll: 0,
        };
        _this.handleMouseDown = function (event) {
            event.preventDefault();
        };
        _this.updateScroll = function () {
            var parentElement = _this.props.tableElement.parentElement;
            _this.setState({ scroll: parentElement.scrollLeft });
        };
        return _this;
    }
    TableFloatingControls.prototype.render = function () {
        var _a = this.props, editorView = _a.editorView, hoverRows = _a.hoverRows, resetHoverSelection = _a.resetHoverSelection, tableElement = _a.tableElement, insertColumn = _a.insertColumn, insertRow = _a.insertRow, remove = _a.remove, hoverTable = _a.hoverTable, isTableHovered = _a.isTableHovered, isTableInDanger = _a.isTableInDanger;
        if (!tableElement) {
            return null;
        }
        return (React.createElement(styles_1.Container, { onMouseDown: this.handleMouseDown },
            React.createElement(CornerControls_1.default, { editorView: editorView, tableElement: tableElement, insertColumn: insertColumn, insertRow: insertRow, hoverTable: hoverTable, resetHoverSelection: resetHoverSelection, updateScroll: this.updateScroll, scroll: this.state.scroll, isTableInDanger: isTableInDanger }),
            React.createElement(RowControls_1.default, { editorView: editorView, tableElement: tableElement, isTableHovered: isTableHovered, insertRow: insertRow, remove: remove, hoverRows: hoverRows, resetHoverSelection: resetHoverSelection, updateScroll: this.updateScroll, scroll: this.state.scroll, isTableInDanger: isTableInDanger })));
    };
    return TableFloatingControls;
}(react_1.Component));
exports.default = TableFloatingControls;
//# sourceMappingURL=index.js.map