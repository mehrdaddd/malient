/// <reference types="react" />
import { Component } from 'react';
import { EditorView } from 'prosemirror-view';
import { Node as PMNode } from 'prosemirror-model';
export interface MediaGroupNodeProps {
    view: EditorView;
    node: PMNode;
}
export interface MediaGroupNodeState {
    animate: boolean;
    offset: number;
}
export default class MediaGroupNode extends Component<MediaGroupNodeProps, MediaGroupNodeState> {
    private mediaPluginState;
    private mediaNodesIds;
    state: MediaGroupNodeState;
    constructor(props: any);
    private handleSize;
    private handleScroll;
    /**
     * Save all childNodes ids into "mediaNodesIds"
     */
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    /**
     * Update "mediaNodesIds" and notify media plugin about removed nodes
     */
    componentWillReceiveProps(nextProps: any): void;
    render(): JSX.Element;
    private getMediaNodesIds;
}
