/// <reference types="react" />
import * as React from 'react';
import { Component } from 'react';
import { Node as PMNode } from 'prosemirror-model';
import { EditorView } from 'prosemirror-view';
export interface MediaSingleNodeProps {
    node: PMNode;
    view: EditorView;
    width: number;
}
export interface MediaSingleNodeState {
    progress: number;
    width?: number;
    height?: number;
}
export default class MediaSingleNode extends Component<MediaSingleNodeProps, MediaSingleNodeState> {
    private child;
    private mediaPluginState;
    state: MediaSingleNodeState;
    constructor(props: any);
    componentWillReceiveProps(props: any): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    handleMediaUpdate: (state: any) => void;
    getChild: (props: any) => React.ReactElement<any>;
    private onExternalImageLoaded;
    render(): JSX.Element;
}
