"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var editor_common_1 = require("@atlaskit/editor-common");
var macro_1 = require("../macro");
var plugin_1 = require("./plugin");
var actions_1 = require("./actions");
var ExtensionEditPanel_1 = require("./ui/ExtensionEditPanel");
var WithPluginState_1 = require("../../ui/WithPluginState");
var extensionPlugin = {
    nodes: function () {
        return [
            { rank: 2300, name: 'extension', node: editor_common_1.extension },
            { rank: 2310, name: 'bodiedExtension', node: editor_common_1.bodiedExtension },
            { rank: 2320, name: 'inlineExtension', node: editor_common_1.inlineExtension },
        ];
    },
    pmPlugins: function () {
        return [
            {
                rank: 2330,
                plugin: function (_a) {
                    var schema = _a.schema, props = _a.props, dispatch = _a.dispatch, providerFactory = _a.providerFactory;
                    return plugin_1.default(dispatch, providerFactory, props.extensionHandlers || {});
                },
            },
        ];
    },
    contentComponent: function (_a) {
        var editorView = _a.editorView;
        var dispatch = editorView.dispatch;
        return (React.createElement(WithPluginState_1.default, { plugins: {
                macroState: macro_1.pluginKey,
                extensionState: plugin_1.pluginKey,
            }, render: function (_a) {
                var _b = _a.macroState, macroState = _b === void 0 ? {} : _b, _c = _a.extensionState, extensionState = _c === void 0 ? {} : _c;
                return (React.createElement(ExtensionEditPanel_1.default, { element: extensionState.element, onEdit: function () { return actions_1.editExtension(macroState.macroProvider)(editorView); }, onRemove: function () { return actions_1.removeExtension(editorView.state, dispatch); }, stickToolbarToBottom: extensionState.stickToolbarToBottom }));
            } }));
    },
};
exports.default = extensionPlugin;
//# sourceMappingURL=index.js.map