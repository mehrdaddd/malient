"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_1 = require("react");
exports.default = function (WrappedComponent, eventDispatcher) {
    return /** @class */ (function (_super) {
        tslib_1.__extends(Connect, _super);
        function Connect() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.onChangeHandler = function (nextState) {
                _this.setState(nextState);
            };
            return _this;
        }
        Connect.prototype.componentDidMount = function () {
            eventDispatcher.on('change', this.onChangeHandler);
        };
        Connect.prototype.componentWillUnmount = function () {
            eventDispatcher.off('change', this.onChangeHandler);
        };
        /**
         * TODO: It can mess things up if the WrappedComponent has static property,
         * can be improved using `hoist-non-react-statics`
         */
        Connect.prototype.render = function () {
            return React.createElement(WrappedComponent, tslib_1.__assign({}, this.props, this.state));
        };
        return Connect;
    }(react_1.PureComponent));
};
//# sourceMappingURL=connect.js.map