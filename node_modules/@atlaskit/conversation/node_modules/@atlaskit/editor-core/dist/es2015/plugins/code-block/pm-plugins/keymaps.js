import { keymap } from 'prosemirror-keymap';
export function keymapPlugin(schema) {
    return keymap({
        Enter: function (state, dispatch) {
            var selection = state.selection, nodes = state.schema.nodes;
            var $from = selection.$from, $to = selection.$to;
            var node = $from.node($from.depth);
            var selectionIsAtEndOfCodeBlock = node &&
                node.type === nodes.codeBlock &&
                $from.parentOffset === $from.parent.nodeSize - 2 && // cursor offset is at the end of block
                $from.indexAfter($from.depth) === node.childCount; // paragraph is the last child of code block
            var codeBlockEndsWithNewLine = node.lastChild &&
                node.lastChild.text &&
                node.lastChild.text.endsWith('\n');
            if (selectionIsAtEndOfCodeBlock && codeBlockEndsWithNewLine) {
                var tr = state.tr
                    .split($to.pos)
                    .setBlockType($to.pos + 2, $to.pos + 2, nodes.paragraph)
                    .delete($from.pos - 1, $from.pos)
                    .scrollIntoView();
                dispatch(tr);
                return true;
            }
            return false;
        },
        Backspace: function (state, dispatch) {
            var selection = state.selection, tr = state.tr, nodes = state.schema.nodes;
            if (!selection.empty || selection.from !== 1) {
                return false;
            }
            var $anchor = selection.$anchor;
            var node = $anchor.node($anchor.depth);
            if (node && node.type === nodes.codeBlock) {
                tr.setBlockType($anchor.pos, $anchor.pos, nodes.paragraph);
                dispatch(tr);
                return true;
            }
            return false;
        },
    });
}
export default keymapPlugin;
//# sourceMappingURL=keymaps.js.map