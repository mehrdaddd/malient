import * as tslib_1 from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import { default as MediaItem } from './MediaItem';
import { stateKey as mediaStateKey, } from '../../pm-plugins/main';
var Media = /** @class */ (function (_super) {
    tslib_1.__extends(Media, _super);
    function Media() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Media.prototype.render = function () {
        // Pass in the fallback state manager from the editor plugin
        var stateManagerFallback = this.getStateManagerFromEditorPlugin();
        var props = tslib_1.__assign({ stateManagerFallback: stateManagerFallback }, this.props);
        return React.createElement(MediaItem, tslib_1.__assign({}, props));
    };
    // Get the state manager from the editor plugin to feed to MediaItem as a prop
    Media.prototype.getStateManagerFromEditorPlugin = function () {
        var editorView = this.props.editorView;
        if (!editorView) {
            return;
        }
        var pluginState = mediaStateKey.getState(editorView.state);
        if (!pluginState) {
            return;
        }
        return pluginState.stateManager;
    };
    return Media;
}(PureComponent));
export default Media;
//# sourceMappingURL=index.js.map