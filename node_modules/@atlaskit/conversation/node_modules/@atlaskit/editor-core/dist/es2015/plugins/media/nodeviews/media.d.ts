/// <reference types="react" />
import { Component } from 'react';
import { Node as PMNode } from 'prosemirror-model';
import { EditorView } from 'prosemirror-view';
import { ProviderFactory } from '@atlaskit/editor-common';
import { CardDimensions } from '@atlaskit/media-card';
import { ProsemirrorGetPosHandler, ReactNodeProps } from '../../../nodeviews';
export interface MediaNodeProps extends ReactNodeProps {
    getPos: ProsemirrorGetPosHandler;
    view: EditorView;
    node: PMNode;
    providerFactory: ProviderFactory;
    cardDimensions: CardDimensions;
    isMediaSingle?: boolean;
    progress?: number;
    onExternalImageLoaded?: (dimensions: {
        width: number;
        height: number;
    }) => void;
}
export default class MediaNode extends Component<MediaNodeProps, {}> {
    private pluginState;
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    shouldComponentUpdate(nextProps: any): boolean;
    cancelProgress: () => void;
    render(): JSX.Element;
    private handleRemove;
    private handleNewNode;
}
