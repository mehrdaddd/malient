import { Plugin, PluginKey } from 'prosemirror-state';
export var pluginKey = new PluginKey('widthPlugin');
export function createPlugin(dispatch) {
    return new Plugin({
        key: pluginKey,
        state: {
            init: function () { return undefined; },
            apply: function (tr, width) {
                var newWidth = tr.getMeta(pluginKey);
                if (newWidth && width !== newWidth) {
                    dispatch(pluginKey, newWidth);
                    return newWidth;
                }
                return width;
            },
        },
    });
}
var widthPlugin = {
    pmPlugins: function () { return [
        {
            rank: 10000,
            plugin: function (_a) {
                var dispatch = _a.dispatch;
                return createPlugin(dispatch);
            },
        },
    ]; },
};
export default widthPlugin;
//# sourceMappingURL=index.js.map