import { MediaApiConfig } from '@atlaskit/media-store';
import { MediaCollectionItem } from '../collection';
import { Resources } from '../item';
export declare const DEFAULT_COLLECTION_PAGE_SIZE: number;
export declare type SortDirection = 'desc' | 'asc';
export declare type RemoteCollectionItem = RemoteCollectionFileItem | RemoteCollectionLinkItem;
export interface RemoteCollectionFileItem {
    readonly id: string;
    readonly occurrenceKey: string;
    readonly type: 'file';
    readonly details: RemoteCollectionFileItemDetails;
}
export interface RemoteCollectionFileItemDetails {
    readonly name: string;
    readonly size: number;
    readonly mimeType?: string;
}
export interface RemoteCollectionLinkItem {
    readonly id: string;
    readonly occurrenceKey: string;
    readonly type: 'link';
    readonly details: RemoteCollectionLinkItemDetails;
}
export interface RemoteCollectionLinkItemDetails {
    readonly url: string;
    readonly title?: string;
    readonly resources?: Resources;
}
export interface RemoteCollectionItemsResponse {
    items: Array<MediaCollectionItem>;
    nextInclusiveStartKey?: string;
}
export interface CollectionService {
    getCollectionItems(collectionName: string, limit: number, inclusiveStartKey?: string, sortDirection?: SortDirection, details?: DetailsType): Promise<RemoteCollectionItemsResponse>;
}
export declare type DetailsType = 'minimal' | 'full';
export declare class MediaCollectionService implements CollectionService {
    private config;
    constructor(config: MediaApiConfig);
    private mapToMediaCollectionItem(item);
    getCollectionItems(collectionName: string, limit?: number, inclusiveStartKey?: string, sortDirection?: SortDirection, details?: DetailsType): Promise<RemoteCollectionItemsResponse>;
}
