"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var createRequest_1 = require("./util/createRequest");
var MediaBlobService = /** @class */ (function () {
    function MediaBlobService(authProvider, serviceHost, collectionName) {
        this.authProvider = authProvider;
        this.serviceHost = serviceHost;
        this.collectionName = collectionName;
        this.request = createRequest_1.default({
            config: {
                serviceHost: this.serviceHost,
                authProvider: this.authProvider,
            },
            collectionName: this.collectionName,
        });
    }
    MediaBlobService.prototype.fetchOriginalBlob = function (mediaItem) {
        return this.fetchOriginalBlobCancelable(mediaItem).response;
    };
    MediaBlobService.prototype.fetchOriginalBlobCancelable = function (mediaItem) {
        return this.fetchSomeBlob("/file/" + mediaItem.details.id + "/binary", {
            'max-age': 3600,
            collection: this.collectionName,
        });
    };
    MediaBlobService.prototype.fetchImageBlob = function (mediaItem, options) {
        return this.fetchImageBlobCancelable(mediaItem, options).response;
    };
    MediaBlobService.prototype.fetchImageBlobCancelable = function (mediaItem, _a) {
        var width = _a.width, height = _a.height, _b = _a.mode, mode = _b === void 0 ? 'crop' : _b, _c = _a.allowAnimated, allowAnimated = _c === void 0 ? true : _c;
        return this.fetchSomeBlob("/file/" + mediaItem.details.id + "/image", {
            width: width,
            height: height,
            mode: mode,
            allowAnimated: allowAnimated,
            'max-age': 3600,
            collection: this.collectionName,
        });
    };
    // this is not private just for testing
    MediaBlobService.prototype.fetchSomeBlob = function (url, params) {
        return this.request({
            url: url,
            params: params,
            responseType: 'image',
        });
    };
    return MediaBlobService;
}());
exports.MediaBlobService = MediaBlobService;
//# sourceMappingURL=blobService.js.map