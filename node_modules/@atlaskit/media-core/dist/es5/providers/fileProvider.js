"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fileService_1 = require("../services/fileService");
var Observable_1 = require("rxjs/Observable");
require("rxjs/add/operator/publishReplay");
exports.FILE_PROVIDER_RETRY_INTERVAL = 2000;
var FileProvider = /** @class */ (function () {
    function FileProvider() {
    }
    FileProvider.fromMediaApi = function (config, fileItemCache, fileId, collection, pollInterval) {
        return FileProvider.fromFileService(new fileService_1.MediaFileService(config, fileItemCache), fileId, collection, pollInterval);
    };
    FileProvider.fromFileService = function (fileService, fileId, collectionName, pollInterval) {
        return {
            observable: function () {
                var observable = new Observable_1.Observable(function (subscriber) {
                    var handle;
                    var timeout = pollInterval || 1000;
                    var fetch = function () {
                        fileService.getFileItem(fileId, collectionName).then(function (fileItem) {
                            if (fileItem.details.processingStatus !== 'pending') {
                                subscriber.next(fileItem);
                                subscriber.complete();
                            }
                            else {
                                subscriber.next(fileItem);
                                handle = window.setTimeout(function () { return fetch(); }, timeout);
                            }
                        }, function (error) {
                            subscriber.error(error);
                        });
                    };
                    fetch();
                    return function () {
                        if (handle !== null) {
                            clearTimeout(handle);
                        }
                    };
                }).publishReplay(1);
                observable.connect();
                return observable;
            },
        };
    };
    return FileProvider;
}());
exports.FileProvider = FileProvider;
//# sourceMappingURL=fileProvider.js.map