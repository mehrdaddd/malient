import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/publishReplay';
import { MediaCollection, MediaCollectionItem } from '../collection';
import { CollectionService, SortDirection } from '../services/collectionService';
import { MediaCollectionProvider } from './mediaCollectionProvider';
export declare type MediaCollectionItemPredicate = (item: MediaCollectionItem) => boolean;
export declare class RemoteMediaCollectionProvider implements MediaCollectionProvider {
    private readonly collectionService;
    private readonly collectionName;
    private readonly pageSize;
    private readonly sortDirection;
    private readonly subject;
    private readonly connectableObservable;
    private items;
    private nextInclusiveStartKey?;
    private isLoading;
    constructor(collectionService: CollectionService, collectionName: string, pageSize: number, sortDirection: SortDirection);
    observable(): Observable<MediaCollection | Error>;
    loadNextPage(): void;
    refresh(): void;
    private onAxiosError;
}
