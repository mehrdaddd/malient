import 'rxjs/add/observable/of';
import 'rxjs/add/operator/startWith';
import { UploadableFile, UploadFileCallbacks, ContextConfig, UploadFileResult } from '@atlaskit/media-store';
import { MediaItemProvider, MediaCollectionProvider, MediaUrlPreviewProvider } from '../providers/';
import { MediaItemType, MediaItem, UrlPreview } from '../';
import { DataUriService } from '../services/dataUriService';
import { BlobService } from '../services/blobService';
export interface Context {
    getMediaItemProvider(id: string, mediaItemType: MediaItemType, collectionName?: string, mediaItem?: MediaItem): MediaItemProvider;
    getMediaCollectionProvider(collectionName: string, pageSize: number): MediaCollectionProvider;
    getUrlPreviewProvider(url: string): MediaUrlPreviewProvider;
    getDataUriService(collectionName?: string): DataUriService;
    getLocalPreview(id: string): string | undefined;
    setLocalPreview(id: string, preview: string): void;
    removeLocalPreview(id: string): void;
    getBlobService(collectionName?: string): BlobService;
    addLinkItem(url: string, collectionName: string, metadata?: UrlPreview): Promise<string>;
    refreshCollection(collectionName: string, pageSize: number): void;
    uploadFile(file: UploadableFile, callbacks?: UploadFileCallbacks): UploadFileResult;
    readonly config: ContextConfig;
}
export declare class ContextFactory {
    static create(config: ContextConfig): Context;
}
