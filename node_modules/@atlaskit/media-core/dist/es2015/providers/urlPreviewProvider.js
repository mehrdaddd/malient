import { MediaUrlPreviewService, } from '../services/urlPreviewService';
import { Observable } from 'rxjs/Observable';
var UrlPreviewProvider = /** @class */ (function () {
    function UrlPreviewProvider() {
    }
    UrlPreviewProvider.fromMediaApi = function (config, url) {
        return UrlPreviewProvider.fromUrlPreviewService(new MediaUrlPreviewService(config), url);
    };
    UrlPreviewProvider.fromUrlPreviewService = function (urlPreviewService, url) {
        return {
            observable: function () {
                return new Observable(function (observer) {
                    urlPreviewService.getUrlPreview(url).then(function (linkPreview) {
                        observer.next(linkPreview);
                        observer.complete();
                    }, function (error) {
                        observer.error(error);
                    });
                    return function () { };
                });
            },
        };
    };
    return UrlPreviewProvider;
}());
export { UrlPreviewProvider };
//# sourceMappingURL=urlPreviewProvider.js.map