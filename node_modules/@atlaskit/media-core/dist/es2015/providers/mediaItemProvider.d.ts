import { MediaItem, MediaItemType, MediaApiConfig } from '../';
import { Observable } from 'rxjs/Observable';
import { Pool } from './util/pool';
import { LRUCache } from 'lru-fast';
import { FileItem } from '../item';
export declare type MediaItemObservablePool = Pool<Observable<MediaItem>>;
export interface MediaItemProvider {
    observable(): Observable<MediaItem>;
}
export declare class MediaItemProvider {
    static fromMediaApi(config: MediaApiConfig, fileItemCache: LRUCache<string, FileItem>, mediaItemType: MediaItemType, id: string, collection?: string): MediaItemProvider;
    static fromPool(pool: MediaItemObservablePool, config: MediaApiConfig, fileItemCache: LRUCache<string, FileItem>, mediaItemType: MediaItemType, id: string, collection?: string): MediaItemProvider;
    static createPool(): MediaItemObservablePool;
}
