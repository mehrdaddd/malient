import { RemoteMediaCollectionProvider } from './remoteMediaCollectionProvider';
import { MediaCollectionService, } from '../services/collectionService';
import { mediaCollectionProviderFromPool } from './util/mediaCollectionProviderFromPool';
import { Pool } from './util/pool';
var RemoteMediaCollectionProviderFactory = /** @class */ (function () {
    function RemoteMediaCollectionProviderFactory() {
    }
    RemoteMediaCollectionProviderFactory.fromCollectionService = function (collectionService, collectionName, pageSize, sortDirection) {
        if (sortDirection === void 0) { sortDirection = 'desc'; }
        return new RemoteMediaCollectionProvider(collectionService, collectionName, pageSize, sortDirection);
    };
    RemoteMediaCollectionProviderFactory.fromMediaAPI = function (config, collectionName, pageSize, sortDirection) {
        if (sortDirection === void 0) { sortDirection = 'desc'; }
        return RemoteMediaCollectionProviderFactory.fromCollectionService(new MediaCollectionService(config), collectionName, pageSize, sortDirection);
    };
    RemoteMediaCollectionProviderFactory.fromPool = function (pool, config, collectionName, pageSize, sortDirection) {
        if (sortDirection === void 0) { sortDirection = 'desc'; }
        var poolId = [collectionName, pageSize, sortDirection].join('-');
        var createFn = function () {
            var collectionService = new MediaCollectionService(config);
            return new RemoteMediaCollectionProvider(collectionService, collectionName, pageSize, sortDirection);
        };
        return mediaCollectionProviderFromPool(pool, poolId, createFn);
    };
    RemoteMediaCollectionProviderFactory.createPool = function () {
        return new Pool();
    };
    return RemoteMediaCollectionProviderFactory;
}());
export { RemoteMediaCollectionProviderFactory };
//# sourceMappingURL=remoteMediaCollectionProviderFactory.js.map