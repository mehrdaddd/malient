'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
Listens to public and private events and delegates to an analytics
stack in a different React root.
*/

/* eslint-disable react/sort-comp */
var ContextTypes = {
  onAnalyticsEvent: _propTypes2.default.func
};

var AnalyticsDelegate = function (_Component) {
  (0, _inherits3.default)(AnalyticsDelegate, _Component);

  function AnalyticsDelegate() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, AnalyticsDelegate);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AnalyticsDelegate.__proto__ || (0, _getPrototypeOf2.default)(AnalyticsDelegate)).call.apply(_ref, [this].concat(args))), _this), _this.onAnalyticsEvent = function (name, data, isPrivate) {
      var delegateAnalyticsEvent = _this.props.delegateAnalyticsEvent;

      // send a clean data object so it can't be mutated between listeners

      var eventData = (0, _extends3.default)({}, data);
      if (delegateAnalyticsEvent) {
        delegateAnalyticsEvent(name, eventData, isPrivate);
      }

      // Pass the event up the hierarchy
      var onAnalyticsEvent = _this.context.onAnalyticsEvent;

      if (typeof onAnalyticsEvent === 'function') {
        onAnalyticsEvent(name, data, isPrivate);
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(AnalyticsDelegate, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        onAnalyticsEvent: this.onAnalyticsEvent
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children; // eslint-disable-line react/prop-types

      return _react2.default.Children.only(children);
    }
  }]);
  return AnalyticsDelegate;
}(_react.Component);

AnalyticsDelegate.contextTypes = ContextTypes;
AnalyticsDelegate.childContextTypes = ContextTypes;
exports.default = AnalyticsDelegate;