'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _matchEvent = require('./matchEvent');

var _matchEvent2 = _interopRequireDefault(_matchEvent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* The Decorator component extends analytics event data for any events fired by
its descendents, then passes the event up the hierarchy */

var ContextTypes = {
  onAnalyticsEvent: _propTypes2.default.func,
  getParentAnalyticsData: _propTypes2.default.func
};
/* eslint-disable react/sort-comp */

var AnalyticsDecorator = function (_Component) {
  (0, _inherits3.default)(AnalyticsDecorator, _Component);

  function AnalyticsDecorator() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, AnalyticsDecorator);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AnalyticsDecorator.__proto__ || (0, _getPrototypeOf2.default)(AnalyticsDecorator)).call.apply(_ref, [this].concat(args))), _this), _this.getDecoratedAnalyticsData = function (name, srcData, isPrivate) {
      // Decorate the event data if this decorator matches the event name
      var _this$props = _this.props,
          data = _this$props.data,
          getData = _this$props.getData,
          match = _this$props.match,
          matchPrivate = _this$props.matchPrivate;

      var decoratedData = (0, _extends3.default)({}, srcData);
      if (matchPrivate === isPrivate && (0, _matchEvent2.default)(match, name)) {
        if ((typeof data === 'undefined' ? 'undefined' : (0, _typeof3.default)(data)) === 'object') {
          (0, _assign2.default)(decoratedData, data);
        }
        if (typeof getData === 'function') {
          (0, _assign2.default)(decoratedData, getData(name, decoratedData));
        }
      }
      return decoratedData;
    }, _this.onAnalyticsEvent = function (name, srcData, isPrivate) {
      // Check there is a listener to pass the event to, otherwise there's no need
      // to do any of this work
      var onAnalyticsEvent = _this.context.onAnalyticsEvent;

      if (typeof onAnalyticsEvent !== 'function') return;
      var decoratedData = _this.getDecoratedAnalyticsData(name, srcData, isPrivate);
      // Pass the decorated event data to the next listener up the hierarchy
      onAnalyticsEvent(name, decoratedData, isPrivate);
    }, _this.getParentAnalyticsData = function (name, isPrivate) {
      var parentData = _this.getDecoratedAnalyticsData(name, {}, isPrivate);
      // Get any analytics data from any decorators up the hierarchy
      var getParentAnalyticsData = _this.context.getParentAnalyticsData;

      if (typeof getParentAnalyticsData === 'function') {
        (0, _assign2.default)(parentData, getParentAnalyticsData(name, isPrivate));
      }
      return parentData;
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(AnalyticsDecorator, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        onAnalyticsEvent: this.onAnalyticsEvent,
        getParentAnalyticsData: this.getParentAnalyticsData
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children; // eslint-disable-line react/prop-types

      return _react2.default.Children.only(children);
    }
  }]);
  return AnalyticsDecorator;
}(_react.Component);

AnalyticsDecorator.defaultProps = {
  match: '*',
  matchPrivate: false
};
AnalyticsDecorator.contextTypes = ContextTypes;
AnalyticsDecorator.childContextTypes = ContextTypes;
exports.default = AnalyticsDecorator;