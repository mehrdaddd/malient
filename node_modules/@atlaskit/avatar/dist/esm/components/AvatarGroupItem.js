import _extends from 'babel-runtime/helpers/extends';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import { DropdownItem } from '@atlaskit/dropdown-menu';
import Avatar from './Avatar';
import { withPseudoState } from '../hoc';
import { getBackgroundColor } from '../styled/AvatarGroup';
import { getProps } from '../helpers';

var AvatarGroupItem = function (_Component) {
  _inherits(AvatarGroupItem, _Component);

  function AvatarGroupItem() {
    _classCallCheck(this, AvatarGroupItem);

    return _possibleConstructorReturn(this, (AvatarGroupItem.__proto__ || _Object$getPrototypeOf(AvatarGroupItem)).apply(this, arguments));
  }

  _createClass(AvatarGroupItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          avatar = _props.avatar,
          onAvatarClick = _props.onAvatarClick;

      var borderColor = getBackgroundColor(this.props);
      var enhancedProps = getProps(this);
      return React.createElement(
        DropdownItem,
        _extends({
          isInteractive: true
        }, enhancedProps, {
          elemBefore: React.createElement(Avatar, _extends({}, avatar, {
            borderColor: borderColor,
            enableTooltip: false,
            size: 'small'
          })),
          href: avatar.href,
          onClick: function onClick(event) {
            if (typeof onAvatarClick === 'function') {
              onAvatarClick({ event: event, item: avatar });
            }
          },
          rel: avatar.target ? 'noopener noreferrer' : null,
          target: avatar.target
        }),
        avatar.name
      );
    }
  }]);

  return AvatarGroupItem;
}(Component);

export default withPseudoState(AvatarGroupItem);