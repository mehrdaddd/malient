'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n  color: ', ';\n  display: inline-block;\n  fill: ', ';\n  height: ', 'px;\n  position: relative;\n  user-select: none;\n\n  > svg {\n    fill: inherit;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n  > canvas {\n    display: block;\n    height: 100%;\n    visibility: hidden;\n  }\n  ', ';\n'], ['\n  color: ', ';\n  display: inline-block;\n  fill: ', ';\n  height: ', 'px;\n  position: relative;\n  user-select: none;\n\n  > svg {\n    fill: inherit;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n  > canvas {\n    display: block;\n    height: 100%;\n    visibility: hidden;\n  }\n  ', ';\n']),
    _templateObject2 = (0, _taggedTemplateLiteral3.default)(['\n      /* Stop-color doesn\'t properly apply in chrome when the inherited/current color changes.\n      * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS\n      * rule) and then override it with currentColor for the color changes to be picked up.\n      */\n      stop {\n        stop-color: currentColor;\n      }\n    '], ['\n      /* Stop-color doesn\'t properly apply in chrome when the inherited/current color changes.\n      * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS\n      * rule) and then override it with currentColor for the color changes to be picked up.\n      */\n      stop {\n        stop-color: currentColor;\n      }\n    ']);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Wrapper = _styledComponents2.default.span(_templateObject, function (p) {
  return p.iconColor;
}, function (p) {
  return p.textColor;
}, function (p) {
  return _constants.sizes[p.size];
}, function (p) {
  return (
    /* Only apply this if our stop-colors are inherit, if they aren't we don't need to set stop-color via css */
    p.iconGradientStart === 'inherit' && p.iconGradientStop === 'inherit' && (0, _styledComponents.css)(_templateObject2)
  );
});

exports.default = Wrapper;