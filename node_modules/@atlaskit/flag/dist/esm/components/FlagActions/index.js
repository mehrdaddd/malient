import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import uuid from 'uuid/v1';
import Container, { Action, Button } from './styledFlagActions';

import { DEFAULT_APPEARANCE } from '../Flag';

var FlagActions = function (_Component) {
  _inherits(FlagActions, _Component);

  function FlagActions() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, FlagActions);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FlagActions.__proto__ || _Object$getPrototypeOf(FlagActions)).call.apply(_ref, [this].concat(args))), _this), _this.getButtonFocusRingColor = function () {
      return 'focusRingColor';
    }, _this.getButtonTheme = function () {
      return 'buttonTheme';
    }, _this.getButtonAppearance = function (b) {
      return b ? 'default' : 'subtle-link';
    }, _this.getButtonSpacing = function (b) {
      return b ? 'compact' : 'none';
    }, _this.getUniqueId = function (prefix) {
      return prefix + '-' + uuid();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  } // eslint-disable-line react/sort-comp

  /* eslint-disable no-undef */

  _createClass(FlagActions, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          actions = _props.actions,
          appearance = _props.appearance;

      var isBold = appearance !== DEFAULT_APPEARANCE;

      if (!actions.length) return null;

      var items = actions.map(function (action, index) {
        return React.createElement(
          Action,
          {
            key: _this2.getUniqueId('flag-action'),
            hasDivider: !!index,
            useMidDot: !isBold
          },
          React.createElement(
            Button,
            { onClick: action.onClick, appearance: appearance },
            action.content
          )
        );
      });

      return React.createElement(
        Container,
        null,
        items
      );
    }
  }]);

  return FlagActions;
}(Component);

FlagActions.defaultProps = {
  appearance: DEFAULT_APPEARANCE,
  actions: []
};
export default FlagActions;