import _extends from 'babel-runtime/helpers/extends';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import Flag from '../Flag';


export var AUTO_DISMISS_SECONDS = 15;

var AutoDismissFlag = function (_Component) {
  _inherits(AutoDismissFlag, _Component);

  function AutoDismissFlag() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, AutoDismissFlag);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AutoDismissFlag.__proto__ || _Object$getPrototypeOf(AutoDismissFlag)).call.apply(_ref, [this].concat(args))), _this), _this.startAutoDismissTimer = function () {
      if (!_this.isAutoDismissAllowed()) {
        return;
      }

      _this.stopAutoDismissTimer();
      _this.autoDismissTimer = setTimeout(_this.handleAutoDismissTimerEnd, AUTO_DISMISS_SECONDS * 1000);
    }, _this.stopAutoDismissTimer = function () {
      if (_this.autoDismissTimer) {
        clearTimeout(_this.autoDismissTimer);
        _this.autoDismissTimer = null;
      }
    }, _this.dismissFlag = function () {
      if (_this.isAutoDismissAllowed() && _this.props.onDismissed) {
        _this.props.onDismissed(_this.props.id);
      }
    }, _this.handleAutoDismissTimerEnd = function () {
      _this.dismissFlag();
    }, _this.handleInteractionStart = function () {
      _this.stopAutoDismissTimer();
    }, _this.isAutoDismissAllowed = function () {
      return _this.props.isDismissAllowed && _this.props.onDismissed;
    }, _this.handleInteractionEnd = function () {
      _this.startAutoDismissTimer();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  } // eslint-disable-line react/sort-comp

  _createClass(AutoDismissFlag, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.startAutoDismissTimer();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.stopAutoDismissTimer();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (this.props.isDismissAllowed && !prevProps.isDismissAllowed) {
        this.startAutoDismissTimer();
      } else if (!this.props.isDismissAllowed && prevProps.isDismissAllowed) {
        this.stopAutoDismissTimer();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(Flag, _extends({
        onMouseOver: this.handleInteractionStart,
        onFocus: this.handleInteractionStart,
        onMouseOut: this.handleInteractionEnd,
        onBlur: this.handleInteractionEnd
      }, this.props));
    }
  }]);

  return AutoDismissFlag;
}(Component);

export default AutoDismissFlag;