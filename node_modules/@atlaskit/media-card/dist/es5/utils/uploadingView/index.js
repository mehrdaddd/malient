"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_1 = require("react");
var media_ui_1 = require("@atlaskit/media-ui");
var progressBar_1 = require("../progressBar");
var mediaImage_1 = require("../mediaImage");
var cardActions_1 = require("../cardActions");
var styled_1 = require("./styled");
var UploadingView = /** @class */ (function (_super) {
    tslib_1.__extends(UploadingView, _super);
    function UploadingView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UploadingView.prototype.render = function () {
        var _a = this.props, title = _a.title, progress = _a.progress, dataURI = _a.dataURI, actions = _a.actions;
        return (React.createElement(styled_1.Wrapper, null,
            React.createElement(styled_1.Overlay, null,
                React.createElement(styled_1.Title, null,
                    React.createElement(media_ui_1.Ellipsify, { text: title || '', lines: 2 })),
                React.createElement(styled_1.Body, null,
                    React.createElement(styled_1.ProgressWrapper, null,
                        React.createElement(progressBar_1.ProgressBar, { progress: progress })),
                    React.createElement(styled_1.CardActionsWrapper, null, actions ? (React.createElement(cardActions_1.default, { actions: actions, triggerColor: "white" })) : null))),
            dataURI && React.createElement(mediaImage_1.MediaImage, { dataURI: dataURI })));
    };
    return UploadingView;
}(react_1.Component));
exports.UploadingView = UploadingView;
//# sourceMappingURL=index.js.map