'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _rafSchd = require('raf-schd');

var _rafSchd2 = _interopRequireDefault(_rafSchd);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Need to make outer div full height in case consumer wants to align
// child content vertically center. These styles can be overridden by the
// product using the optional SizeDetector.containerStyle prop.
var containerDivStyle = {
  height: '100%',
  flex: '1 0 auto',
  position: 'relative'
};

// Not using styled-components here for performance
// and framework-agnostic reasons.
var objectStyle = {
  display: 'block',
  position: 'absolute',
  top: 0,
  left: 0,
  height: '100%',
  width: '100%',
  overflow: 'hidden',
  pointerEvents: 'none',
  zIndex: -1
};

var SizeDetector = function (_Component) {
  (0, _inherits3.default)(SizeDetector, _Component);

  function SizeDetector(props) {
    (0, _classCallCheck3.default)(this, SizeDetector);

    var _this = (0, _possibleConstructorReturn3.default)(this, (SizeDetector.__proto__ || (0, _getPrototypeOf2.default)(SizeDetector)).call(this, props));

    _this.handleResize = (0, _rafSchd2.default)(function () {
      var container = _this.container;

      if (!container) {
        return;
      }

      var sizeMetrics = {
        width: container.offsetWidth,
        height: container.offsetHeight
      };

      _this.setState({
        sizeMetrics: sizeMetrics
      });

      if (_this.props.onResize) {
        _this.props.onResize(sizeMetrics);
      }
    });

    _this.handleContainerRef = function (ref) {
      if (!ref) {
        return;
      }
      _this.container = ref;
      _this.handleResize();
    };

    _this.handleObjectRef = function (ref) {
      if (!ref) {
        return;
      }
      _this.resizeObject = ref;
    };

    _this.handleObjectLoad = function () {
      if (!_this.resizeObject) {
        return;
      }

      // $FlowFixMe - resizeObject is typed as HTMLElement which has no contentDocument prop
      _this.resizeObjectDocument = _this.resizeObject.contentDocument.defaultView;
      _this.resizeObjectDocument.addEventListener('resize', _this.handleResize);
    };

    _this.renderChildren = function () {
      var sizeMetrics = _this.state.sizeMetrics;

      if (!sizeMetrics) {
        return null;
      }
      return _this.props.children(sizeMetrics);
    };

    _this.state = {};
    return _this;
  }

  (0, _createClass3.default)(SizeDetector, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.resizeObject) {
        // $FlowFixMe - resizeObject is HTMLElement which doesn't contain .data prop
        this.resizeObject.data = 'about:blank';
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.handleResize.cancel();

      if (this.resizeObjectDocument) {
        this.resizeObjectDocument.removeEventListener('resize', this.handleResize);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        {
          style: (0, _extends3.default)({}, containerDivStyle, this.props.containerStyle),
          ref: this.handleContainerRef
        },
        _react2.default.createElement('object', {
          type: 'text/html',
          style: objectStyle,
          ref: this.handleObjectRef,
          onLoad: this.handleObjectLoad,
          'aria-hidden': true,
          tabIndex: -1
        }),
        this.renderChildren()
      );
    }
  }]);
  return SizeDetector;
}(_react.Component);

SizeDetector.defaultProps = {
  // eslint-disable-line react/sort-comp
  containerStyle: {}
};
exports.default = SizeDetector;