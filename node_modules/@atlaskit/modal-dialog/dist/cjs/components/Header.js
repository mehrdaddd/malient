'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _error = require('@atlaskit/icon/glyph/error');

var _error2 = _interopRequireDefault(_error);

var _warning = require('@atlaskit/icon/glyph/warning');

var _warning2 = _interopRequireDefault(_warning);

var _Content = require('../styled/Content');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var icon = { danger: _error2.default, warning: _warning2.default };
var TitleIcon = function TitleIcon(_ref) {
  var appearance = _ref.appearance;

  if (!appearance) return null;

  var Icon = icon[appearance];

  return _react2.default.createElement(
    _Content.TitleIconWrapper,
    { appearance: appearance },
    _react2.default.createElement(Icon, { label: appearance + ' icon' })
  );
};

var ModalHeader = function (_Component) {
  (0, _inherits3.default)(ModalHeader, _Component);

  function ModalHeader() {
    (0, _classCallCheck3.default)(this, ModalHeader);
    return (0, _possibleConstructorReturn3.default)(this, (ModalHeader.__proto__ || (0, _getPrototypeOf2.default)(ModalHeader)).apply(this, arguments));
  }

  (0, _createClass3.default)(ModalHeader, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          appearance = _props.appearance,
          component = _props.component,
          heading = _props.heading,
          onClose = _props.onClose,
          showKeyline = _props.showKeyline,
          isHeadingMultiline = _props.isHeadingMultiline;

      var warning = 'You can provide `component` OR `heading`, not both.';

      if (!component && !heading) return null;
      if (component && heading) return console.warn(warning); // eslint-disable-line no-console
      if (component) {
        return (0, _react.createElement)(component, {
          appearance: appearance,
          onClose: onClose,
          showKeyline: showKeyline,
          isHeadingMultiline: isHeadingMultiline
        });
      }

      return _react2.default.createElement(
        _Content.Header,
        { showKeyline: showKeyline },
        _react2.default.createElement(
          _Content.Title,
          { isHeadingMultiline: isHeadingMultiline },
          _react2.default.createElement(TitleIcon, { appearance: appearance }),
          _react2.default.createElement(
            _Content.TitleText,
            { isHeadingMultiline: isHeadingMultiline },
            heading
          )
        )
      );
    } // eslint-disable-line react/sort-comp

  }]);
  return ModalHeader;
}(_react.Component);

ModalHeader.defaultProps = {
  isHeadingMultiline: true
};
exports.default = ModalHeader;