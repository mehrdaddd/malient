'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var STYLE_KEYS = ['boxSizing', 'height', 'overflow', 'paddingRight', 'position'];

var LOCK_STYLES = {
  boxSizing: 'border-box', // account for possible declaration `width: 100%;` on body
  overflow: 'hidden',
  position: 'relative',
  height: '100%'
};

var ScrollLock = function (_PureComponent) {
  (0, _inherits3.default)(ScrollLock, _PureComponent);

  function ScrollLock() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, ScrollLock);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ScrollLock.__proto__ || (0, _getPrototypeOf2.default)(ScrollLock)).call.apply(_ref, [this].concat(args))), _this), _this.originalStyles = {}, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  } // eslint-disable-line react/sort-comp


  (0, _createClass3.default)(ScrollLock, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (!document.body) return;
      var target = document.body;
      var scrollbarWidth = window.innerWidth - target.clientWidth;

      // keep any styles already applied to the body
      STYLE_KEYS.forEach(function (key) {
        _this2.originalStyles[key] = target.style.getPropertyValue(key);
      });

      if (this.props.detectScrollbars) {
        target.style.paddingRight = scrollbarWidth + 'px';
      }

      (0, _keys2.default)(LOCK_STYLES).forEach(function (rule) {
        var value = LOCK_STYLES[rule];
        target.style.setProperty(rule, value);
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var _this3 = this;

      if (!document.body) return;
      var target = document.body;

      // reapply original body styles, if any
      STYLE_KEYS.forEach(function (rule) {
        target.style.setProperty(rule, _this3.originalStyles[rule]);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);
  return ScrollLock;
}(_react.PureComponent);

ScrollLock.defaultProps = { detectScrollbars: true };
exports.default = ScrollLock;