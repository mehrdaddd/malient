import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  ', ';\n'], ['\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  ', ';\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  align-items: center;\n  display: flex;\n  flex: 0 0 auto;\n  justify-content: space-between;\n  transition: box-shadow 200ms;\n'], ['\n  align-items: center;\n  display: flex;\n  flex: 0 0 auto;\n  justify-content: space-between;\n  transition: box-shadow 200ms;\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n  padding: ', 'px ', 'px ', 'px;\n  box-shadow: ', ';\n'], ['\n  padding: ', 'px ', 'px ', 'px;\n  box-shadow: ', ';\n']),
    _templateObject4 = _taggedTemplateLiteral(['\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n'], ['\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n']),
    _templateObject5 = _taggedTemplateLiteral(['\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-style: inherit;\n  font-weight: 500;\n  letter-spacing: -0.008em;\n  line-height: 1;\n  margin: 0;\n  min-width: 0;\n'], ['\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-style: inherit;\n  font-weight: 500;\n  letter-spacing: -0.008em;\n  line-height: 1;\n  margin: 0;\n  min-width: 0;\n']),
    _templateObject6 = _taggedTemplateLiteral(['\n  flex: 1 1 auto;\n  min-width: 0;\n  word-wrap: break-word;\n  width: 100%;\n  ', ';\n'], ['\n  flex: 1 1 auto;\n  min-width: 0;\n  word-wrap: break-word;\n  width: 100%;\n  ', ';\n']),
    _templateObject7 = _taggedTemplateLiteral(['\n  color: ', ';\n  margin-right: ', 'px;\n  flex: 0 0 auto;\n'], ['\n  color: ', ';\n  margin-right: ', 'px;\n  flex: 0 0 auto;\n']),
    _templateObject8 = _taggedTemplateLiteral(['\n  flex: 1 1 auto;\n  ', ';\n'], ['\n  flex: 1 1 auto;\n  ', ';\n']),
    _templateObject9 = _taggedTemplateLiteral(['\n  display: inline-flex;\n  margin: 0 -', 'px;\n'], ['\n  display: inline-flex;\n  margin: 0 -', 'px;\n']),
    _templateObject10 = _taggedTemplateLiteral(['\n  flex: 1 0 auto;\n  margin: 0 ', 'px;\n'], ['\n  flex: 1 0 auto;\n  margin: 0 ', 'px;\n']);

import styled, { css } from 'styled-components';
import { colors, gridSize, math, themed } from '@atlaskit/theme';

import { flexMaxHeightIEFix } from '../utils/flex-max-height-ie-fix';

// Constants
// ==============================
var innerGutter = 16;
var outerGutter = 20;
var keylineColor = themed({ light: colors.N30, dark: colors.DN30 });
export var keylineHeight = 2;

// Wrapper
// ==============================
export var Wrapper = styled.div(_templateObject, flexMaxHeightIEFix);

// Header
// ==============================
var HeaderOrFooter = styled.div(_templateObject2);

// $FlowFixMe: Passed in type incompatible with expected type of React.Component (quite sure this is an issue with styled component flow types)
export var Header = styled(HeaderOrFooter)(_templateObject3, outerGutter, outerGutter, innerGutter - keylineHeight, function (p) {
  return p.showKeyline ? ' 0 ' + keylineHeight + 'px 0 0 ' + keylineColor(p) : 'none';
});

// Title
var oneLineTitleText = css(_templateObject4);

export var Title = styled.h4(_templateObject5);

export var TitleText = styled.span(_templateObject6, function (_ref) {
  var isHeadingMultiline = _ref.isHeadingMultiline;
  return !isHeadingMultiline && oneLineTitleText;
});
var iconColor = {
  danger: colors.R400,
  warning: colors.Y400
};
export var TitleIconWrapper = styled.span(_templateObject7, function (p) {
  return iconColor[p.appearance];
}, gridSize);

// Body
// ==============================

/**
  Adding the padding here avoids cropping box shadow on first/last
  children. The combined vertical spacing is maintained by subtracting the
  keyline height from header and footer.
*/
export var Body = styled.div(_templateObject8, function (p) {
  return p.shouldScroll ? '\n          overflow-y: auto;\n          overflow-x: hidden;\n          padding: ' + keylineHeight + 'px ' + outerGutter + 'px;\n        ' : '\n          padding: 0 ' + outerGutter + 'px;\n        ';
});

// Footer
// ==============================

// $FlowFixMe: Passed in type incompatible with expected type of React.Component (quite sure this is an issue with styled component flow types)
export var Footer = styled(HeaderOrFooter)(_templateObject3, innerGutter - keylineHeight, outerGutter, outerGutter, function (p) {
  return p.showKeyline ? '0 -' + keylineHeight + 'px 0 0 ' + keylineColor(p) : 'none';
});

export var Actions = styled.div(_templateObject9, math.divide(gridSize, 2));
export var ActionItem = styled.div(_templateObject10, math.divide(gridSize, 2));