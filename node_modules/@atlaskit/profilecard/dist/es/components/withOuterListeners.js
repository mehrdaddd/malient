import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import PropTypes from 'prop-types';
import React, { PureComponent } from 'react';
import ReactDOM from 'react-dom';

export default function withOuterListeners(Component) {
  var _class, _temp2;

  return _temp2 = _class = function (_PureComponent) {
    _inherits(WithOutsideClick, _PureComponent);

    function WithOutsideClick() {
      var _temp, _this, _ret;

      _classCallCheck(this, WithOutsideClick);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.handleClick = function (evt) {
        var domNode = ReactDOM.findDOMNode(_this); // eslint-disable-line react/no-find-dom-node

        if (!domNode || evt.target instanceof Node && !domNode.contains(evt.target)) {
          _this.props.handleClickOutside();
        }
      }, _this.handleKeydown = function (evt) {
        if (evt.code === 'Escape') {
          _this.props.handleEscapeKeydown();
        }
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    WithOutsideClick.prototype.componentDidMount = function componentDidMount() {
      if (this.props.handleClickOutside) {
        document.addEventListener('click', this.handleClick, false);
      }

      if (this.props.handleEscapeKeydown) {
        document.addEventListener('keydown', this.handleKeydown, false);
      }
    };

    WithOutsideClick.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.props.handleClickOutside) {
        document.removeEventListener('click', this.handleClick, false);
      }

      if (this.props.handleEscapeKeydown) {
        document.removeEventListener('keydown', this.handleKeydown, false);
      }
    };

    WithOutsideClick.prototype.render = function render() {
      return React.createElement(Component, this.props);
    };

    return WithOutsideClick;
  }(PureComponent), _class.propTypes = {
    handleClickOutside: PropTypes.func,
    handleEscapeKeydown: PropTypes.func
  }, _temp2;
}