import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n  background-color: ', ';\n  border-radius: ', 'px;\n  box-shadow: 0 4px 8px -2px ', ', 0 0 1px ', ';\n  cursor: default;\n  font-family: ', ';\n  font-size: ', 'px;\n  overflow: hidden;\n  position: relative;\n  transition: height 0.25s ease;\n  width: ', 'px;\n'], ['\n  background-color: ', ';\n  border-radius: ', 'px;\n  box-shadow: 0 4px 8px -2px ', ', 0 0 1px ', ';\n  cursor: default;\n  font-family: ', ';\n  font-size: ', 'px;\n  overflow: hidden;\n  position: relative;\n  transition: height 0.25s ease;\n  width: ', 'px;\n']);

import PropTypes from 'prop-types';
import React, { PureComponent } from 'react';
import styled from 'styled-components';
import { fontFamily, fontSize, borderRadius, gridSize, math } from '@atlaskit/theme';

import { bgColor, bgShadowColor, bgBorderColor } from '../styled/constants';

var CardAnimationWrapper = styled.div(_templateObject, bgColor, borderRadius, bgShadowColor, bgBorderColor, fontFamily, fontSize, math.multiply(gridSize, 45));

var HeightTransitionWrapper = function (_PureComponent) {
  _inherits(HeightTransitionWrapper, _PureComponent);

  function HeightTransitionWrapper() {
    var _temp, _this, _ret;

    _classCallCheck(this, HeightTransitionWrapper);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.state = {
      height: 'auto'
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  HeightTransitionWrapper.prototype.componentDidMount = function componentDidMount() {
    this.updateRefHeight();
  };

  HeightTransitionWrapper.prototype.componentDidUpdate = function componentDidUpdate() {
    this.updateRefHeight();
  };

  // eslint-disable-next-line class-methods-use-this


  HeightTransitionWrapper.prototype.preventDefault = function preventDefault(event) {
    event.persist();
    event.preventDefault();
  };

  HeightTransitionWrapper.prototype.updateRefHeight = function updateRefHeight() {
    this.setState({
      height: this.ref && this.ref.children.length ? this.ref.children[0].offsetHeight : 'auto'
    });
  };

  HeightTransitionWrapper.prototype.render = function render() {
    var _this2 = this;

    var inlineHeight = {
      height: this.state.height
    };

    return React.createElement(
      CardAnimationWrapper,
      {
        style: inlineHeight,
        innerRef: function innerRef(ref) {
          return _this2.ref = ref;
        },
        onClick: this.preventDefault
      },
      this.props.children
    );
  };

  return HeightTransitionWrapper;
}(PureComponent);

HeightTransitionWrapper.propTypes = {
  children: PropTypes.node
};
export default HeightTransitionWrapper;