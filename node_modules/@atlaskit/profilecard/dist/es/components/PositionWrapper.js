import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n  position: relative;\n'], ['\n  position: relative;\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  position: absolute;\n  ', '\n'], ['\n  position: absolute;\n  ', '\n']);

import PropTypes from 'prop-types';
import React, { PureComponent } from 'react';
import styled from 'styled-components';

var positionStyles = {
  'top left': { left: 0, bottom: 0 },
  'top right': { right: 0, bottom: 0 },
  'right top': { left: 0, top: 0 },
  'right bottom': { left: 0, bottom: 0 },
  'bottom right': { right: 0, top: 0 },
  'bottom left': { left: 0, top: 0 },
  'left bottom': { right: 0, bottom: 0 },
  'left top': { right: 0, top: 0 }
};

var ContainerRelative = styled.div(_templateObject);

var ContainerDirection = styled.div(_templateObject2, function (props) {
  return positionStyles[props.position];
});

var DirectionWrapper = function (_PureComponent) {
  _inherits(DirectionWrapper, _PureComponent);

  function DirectionWrapper() {
    _classCallCheck(this, DirectionWrapper);

    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));
  }

  DirectionWrapper.prototype.render = function render() {
    return React.createElement(
      ContainerRelative,
      null,
      React.createElement(
        ContainerDirection,
        { position: this.props.position },
        this.props.children
      )
    );
  };

  return DirectionWrapper;
}(PureComponent);

DirectionWrapper.propTypes = {
  children: PropTypes.element,
  position: PropTypes.string
};
DirectionWrapper.defaultProps = {
  position: 'top left'
};
export default DirectionWrapper;