"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var editor_common_1 = require("@atlaskit/editor-common");
var React = require("react");
// @ts-ignore: unused variable
// prettier-ignore
var react_1 = require("react");
var styled_components_1 = require("styled-components");
var DEFAULT_WIDTH = 250;
var DEFAULT_HEIGHT = 200;
var _a = React.createContext(0), Provider = _a.Provider, Consumer = _a.Consumer;
exports.BreakoutProvider = Provider;
var ExtendedUIMediaSingle = styled_components_1.default(editor_common_1.MediaSingle)(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  ", " transition: all 0.1s linear;\n"], ["\n  ",
    " transition: all 0.1s linear;\n"])), function (_a) {
    var layout = _a.layout;
    return layout === 'full-width' || layout === 'wide'
        ? "\n  margin-left: 50%;\n  transform: translateX(-50%);\n  "
        : "";
});
var MediaSingle = /** @class */ (function (_super) {
    tslib_1.__extends(MediaSingle, _super);
    function MediaSingle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onExternalImageLoaded = function (_a) {
            var width = _a.width, height = _a.height;
            _this.setState({
                width: width,
                height: height,
            });
        };
        return _this;
    }
    MediaSingle.prototype.render = function () {
        var props = this.props;
        var child = React.Children.only(React.Children.toArray(props.children)[0]);
        var media = React.cloneElement(child, {
            cardDimensions: {
                width: '100%',
                height: '100%',
            },
            onExternalImageLoaded: this.onExternalImageLoaded,
            disableOverlay: true,
        });
        var _a = child.props, width = _a.width, height = _a.height, type = _a.type;
        if (type === 'external') {
            var _b = this.state, stateWidth = _b.width, stateHeight = _b.height;
            if (width === null) {
                width = stateWidth || DEFAULT_WIDTH;
            }
            if (height === null) {
                height = stateHeight || DEFAULT_HEIGHT;
            }
        }
        return (React.createElement(Consumer, null, function (containerWidth) { return (React.createElement(ExtendedUIMediaSingle, { layout: props.layout, width: width, height: height, containerWidth: containerWidth }, media)); }));
    };
    return MediaSingle;
}(react_1.Component));
exports.default = MediaSingle;
var templateObject_1;
//# sourceMappingURL=mediaSingle.js.map