/// <reference types="react" />
import { ComponentClass, Props } from 'react';
import { Mark } from 'prosemirror-model';
import Code from './code';
import Em from './em';
import Link from './link';
import Strike from './strike';
import Strong from './strong';
import Subsup from './subsup';
import TextColor from './textColor';
import Underline from './underline';
import Action from './action';
import ConfluenceInlineComment from './confluence-inline-comment';
export declare const markToReact: {
    code: typeof Code;
    em: (props: Props<any>) => JSX.Element;
    link: (props: {
        children?: any;
        href: string;
        target?: string | undefined;
    } & Props<any>) => JSX.Element;
    strike: (props: Props<any>) => JSX.Element;
    strong: (props: Props<any>) => JSX.Element;
    subsup: (props: {
        type: "sub" | "sup";
    } & Props<any>) => JSX.Element;
    textColor: (props: {
        color: string;
    } & Props<any>) => JSX.Element;
    underline: (props: Props<any>) => JSX.Element;
    action: typeof Action;
    confluenceInlineComment: typeof ConfluenceInlineComment;
};
export declare const toReact: (mark: Mark) => ComponentClass<any>;
export { Code, Em, Link, Strike, Strong, Subsup, TextColor, Underline, Action };
