import * as tslib_1 from "tslib";
import { isFileUploadsStartAction } from '../actions/fileUploadsStart';
export default function fileUploadsAdd(state, action) {
    if (isFileUploadsStartAction(action)) {
        var tenant_1 = state.tenant, uploads = state.uploads, selectedItems = state.selectedItems, lastUploadIndex = state.lastUploadIndex;
        var files = action.files;
        var newUploads_1 = {};
        var newLastUploadIndex_1 = lastUploadIndex;
        files.forEach(function (file) {
            return (newUploads_1[file.id] = {
                file: {
                    metadata: {
                        id: file.id,
                        name: file.name,
                        mimeType: file.type,
                        size: file.size,
                    },
                    dataURI: '',
                },
                progress: 0,
                events: [],
                index: newLastUploadIndex_1++,
                tenant: tenant_1,
            });
        });
        var newSelectedItems = files.map(function (file) { return ({
            date: 0,
            id: file.id,
            mimeType: file.type,
            name: file.name,
            parentId: '',
            size: file.size,
            serviceName: 'upload',
        }); });
        return tslib_1.__assign({}, state, { uploads: tslib_1.__assign({}, uploads, newUploads_1), selectedItems: selectedItems.concat(newSelectedItems), lastUploadIndex: newLastUploadIndex_1 });
    }
    else {
        return state;
    }
}
//# sourceMappingURL=fileUploadsAdd.js.map