'use strict';
import * as tslib_1 from "tslib";
import * as React from 'react';
import { Component } from 'react';
import Button from '@atlaskit/button';
import { filesIcon } from '../../../../icons';
import { ButtonWrapper, DefaultImage, DropzoneText, DropzoneContainer, DropzoneContentWrapper, TextWrapper, } from './styled';
var Dropzone = /** @class */ (function (_super) {
    tslib_1.__extends(Dropzone, _super);
    function Dropzone() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.clickUpload = function () {
            if (_this.props.mpBrowser) {
                _this.props.mpBrowser.browse();
            }
        };
        return _this;
    }
    Dropzone.prototype.render = function () {
        var isEmpty = this.props.isEmpty;
        return (React.createElement(DropzoneContainer, { isEmpty: isEmpty },
            React.createElement(DropzoneContentWrapper, null,
                React.createElement(DefaultImage, { src: filesIcon }),
                React.createElement(TextWrapper, null,
                    React.createElement(DropzoneText, null, "Drag and drop your files anywhere or"),
                    React.createElement(ButtonWrapper, null,
                        React.createElement(Button, { appearance: "default", onClick: this.clickUpload, isDisabled: !this.props.mpBrowser }, "Upload a file"))))));
    };
    return Dropzone;
}(Component));
export { Dropzone };
//# sourceMappingURL=dropzone.js.map