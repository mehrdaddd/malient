"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_1 = require("react");
var lineWidthButtonStyles_1 = require("./lineWidthButtonStyles");
var LineWidthButton = /** @class */ (function (_super) {
    tslib_1.__extends(LineWidthButton, _super);
    function LineWidthButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineWidthButton.prototype.render = function () {
        var _a = this.props, lineWidth = _a.lineWidth, currentLineWidth = _a.currentLineWidth, onLineWidthClick = _a.onLineWidthClick;
        var onClick = function () { return onLineWidthClick(lineWidth); };
        var isSelected = lineWidth === currentLineWidth;
        var BackArea = isSelected ? lineWidthButtonStyles_1.BackAreaSelected : lineWidthButtonStyles_1.BackAreaNormal; // tslint:disable-line:variable-name
        var FrontArea = isSelected ? lineWidthButtonStyles_1.FrontAreaSelected : lineWidthButtonStyles_1.FrontAreaNormal; // tslint:disable-line:variable-name
        var style = {
            width: lineWidth * 2 + "px",
            height: lineWidth * 2 + "px",
            borderRadius: lineWidth + "px",
        };
        return (React.createElement(lineWidthButtonStyles_1.Container, { onClick: onClick },
            React.createElement(lineWidthButtonStyles_1.HoverArea, null,
                React.createElement(lineWidthButtonStyles_1.MainArea, null,
                    React.createElement(BackArea, null,
                        React.createElement(FrontArea, { style: style }))))));
    };
    return LineWidthButton;
}(react_1.Component));
exports.LineWidthButton = LineWidthButton;
//# sourceMappingURL=lineWidthButton.js.map