"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var styled_components_1 = require("styled-components");
var button_1 = require("@atlaskit/button");
var util_shared_styles_1 = require("@atlaskit/util-shared-styles");
exports.FolderViewerNavigation = styled_components_1.default.div(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  display: flex;\n  justify-content: space-between;\n\n  /* Ensure header has height */\n  min-height: 60px;\n  padding: 15px 13px;\n  border-radius: 3px;\n\n  background-color: ", ";\n"], ["\n  display: flex;\n  justify-content: space-between;\n\n  /* Ensure header has height */\n  min-height: 60px;\n  padding: 15px 13px;\n  border-radius: 3px;\n\n  background-color: ", ";\n"])), util_shared_styles_1.akColorN0);
exports.ControlsWrapper = styled_components_1.default.div(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([""], [""])));
exports.Controls = styled_components_1.default.div(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["\n  height: 30px;\n  display: flex;\n"], ["\n  height: 30px;\n  display: flex;\n"])));
exports.ControlButton = styled_components_1.default(button_1.default)(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["\n  margin-right: 5px;\n"], ["\n  margin-right: 5px;\n"])));
exports.BreadCrumbs = styled_components_1.default.div(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"], ["\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"])));
exports.BreadCrumbLinkLabel = styled_components_1.default.span(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["\n  &:hover {\n    text-decoration: ", ";\n  }\n"], ["\n  &:hover {\n    text-decoration: ",
    ";\n  }\n"])), function (props) {
    return props.isLast ? 'none' : 'underline';
});
exports.BreadCrumbLinkSeparator = styled_components_1.default.span(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["\n  color: ", ";\n  display: ", ";\n  margin: 0 4px;\n  text-decoration: none;\n"], ["\n  color: ", ";\n  display: ",
    ";\n  margin: 0 4px;\n  text-decoration: none;\n"])), util_shared_styles_1.akColorN500, function (props) {
    return props.isLast ? 'none' : 'inline';
});
exports.BreadCrumbLink = styled_components_1.default.span(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject(["\n  color: ", ";\n  cursor: ", ";\n  font-size: ", ";\n"], ["\n  color: ",
    ";\n  cursor: ",
    ";\n  font-size: ",
    ";\n"])), function (props) {
    return props.isLast ? util_shared_styles_1.akColorN900 : util_shared_styles_1.akColorN500;
}, function (props) {
    return props.isLast ? 'default' : 'pointer';
}, function (props) {
    return props.isLast ? '20px' : '14px';
});
exports.AccountItemButton = styled_components_1.default(button_1.default)(templateObject_9 || (templateObject_9 = tslib_1.__makeTemplateObject([""], [""])));
// Dropdown is NOT intentionally extended by this component to allow HACK style below to work
exports.AccountDropdownWrapper = styled_components_1.default.div(templateObject_10 || (templateObject_10 = tslib_1.__makeTemplateObject(["\n  /* TODO: remove this when the ak-dropdown-menu package supports custom item types */\n  span[role='presentation'] > span > span:first-child {\n    display: none;\n  }\n"], ["\n  /* TODO: remove this when the ak-dropdown-menu package supports custom item types */\n  span[role='presentation'] > span > span:first-child {\n    display: none;\n  }\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10;
//# sourceMappingURL=styled.js.map