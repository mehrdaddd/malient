"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_1 = require("react");
var styles_1 = require("./styles");
var GenericButton = /** @class */ (function (_super) {
    tslib_1.__extends(GenericButton, _super);
    function GenericButton(props) {
        var _this = _super.call(this, props) || this;
        _this.getContainerClass = function (isClicked, isActive) {
            if (isClicked) {
                return styles_1.ButtonClicked;
            }
            else if (isActive) {
                return styles_1.ButtonActive;
            }
            else {
                return styles_1.ButtonNormal;
            }
        };
        _this.onMouseDown = function (event) {
            if (event.button === 0) {
                _this.setState({ isClicked: true });
            }
        };
        _this.onMouseUp = function (event) {
            if (event.button === 0) {
                _this.setState({ isClicked: false });
                _this.props.onClick();
            }
        };
        _this.onMouseLeave = function () {
            if (_this.state.isClicked) {
                _this.setState({ isClicked: false });
            }
        };
        _this.state = { isClicked: false };
        return _this;
    }
    GenericButton.prototype.render = function () {
        var isActive = this.props.isActive;
        var isClicked = this.state.isClicked;
        var Container = this.getContainerClass(isClicked, isActive); // tslint:disable-line:variable-name
        return (React.createElement(Container, { onMouseDown: this.onMouseDown, onMouseUp: this.onMouseUp, onMouseLeave: this.onMouseLeave }, this.props.children));
    };
    return GenericButton;
}(react_1.Component));
exports.GenericButton = GenericButton;
//# sourceMappingURL=genericButton.js.map