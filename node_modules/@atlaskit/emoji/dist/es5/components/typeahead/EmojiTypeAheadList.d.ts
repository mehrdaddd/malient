/// <reference types="react" />
import { PureComponent } from 'react';
import { EmojiDescription, OnEmojiEvent } from '../../types';
export interface Props {
    emojis: EmojiDescription[];
    onEmojiSelected?: OnEmojiEvent;
    loading?: boolean;
}
export interface State {
    selectedIndex: number;
    selectedKey?: string;
}
export default class EmojiTypeAheadList extends PureComponent<Props, State> {
    private lastMousePosition;
    private scrollable;
    private items;
    static defaultProps: {
        onEmojiSelected: () => void;
    };
    constructor(props: any);
    componentWillReceiveProps(nextProps: Props): void;
    componentDidUpdate(): void;
    selectNext: () => void;
    selectPrevious: () => void;
    chooseCurrentSelection: () => void;
    private revealItem(key);
    private selectIndexNewEmoji(index, emojis);
    private selectIndex(index, callback?);
    private selectByEmojiId(emojiId, callback?);
    private selectIndexOnHover;
    private itemSelected;
    private renderItems(emojis);
    private isSelectedEmoji(emoji, index);
    render(): JSX.Element;
    private handleScrollableRef;
}
