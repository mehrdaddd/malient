import * as tslib_1 from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import AkFieldBase from '@atlaskit/field-base';
import SearchIcon from '@atlaskit/icon/glyph/search';
import * as styles from './styles';
var EmojiPickerListSearch = /** @class */ (function (_super) {
    tslib_1.__extends(EmojiPickerListSearch, _super);
    function EmojiPickerListSearch(props) {
        var _this = _super.call(this, props) || this;
        _this.onChange = function (e) {
            _this.setState({ query: e.target.value });
            _this.props.onChange(e);
        };
        _this.handleInputRef = function (input) {
            if (input) {
                input.focus();
            }
        };
        _this.state = {
            query: props.query,
        };
        return _this;
    }
    EmojiPickerListSearch.prototype.componentWillReceiveProps = function (nextProps) {
        this.setState({ query: nextProps.query });
    };
    EmojiPickerListSearch.prototype.render = function () {
        var _a = this.props, style = _a.style, query = _a.query;
        return (React.createElement("div", { className: styles.pickerSearch, style: style },
            React.createElement(AkFieldBase, { appearance: "standard", label: "Search", isCompact: true, isLabelHidden: true, isFitContainerWidthEnabled: true },
                React.createElement("span", { className: styles.searchIcon },
                    React.createElement(SearchIcon, { label: "Search" })),
                React.createElement("input", { className: styles.input, autoComplete: "off", disabled: false, name: "search", placeholder: "Search...", required: false, onChange: this.onChange, value: query || '', ref: this.handleInputRef }))));
    };
    EmojiPickerListSearch.defaultProps = {
        style: {},
    };
    return EmojiPickerListSearch;
}(PureComponent));
export default EmojiPickerListSearch;
//# sourceMappingURL=EmojiPickerListSearch.js.map