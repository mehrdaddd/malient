/// <reference types="react" />
import { PureComponent } from 'react';
import { EditorView } from 'prosemirror-view';
import { CodeBlockState } from '../../pm-plugins/main';
import { Language } from './languageList';
export interface Props {
    editorView: EditorView;
    pluginState: CodeBlockState;
    popupsMountPoint?: HTMLElement;
    popupsBoundariesElement?: HTMLElement;
    popupsScrollableElement?: HTMLElement;
}
export interface State {
    active?: boolean;
    element?: HTMLElement;
    activeLanguage?: Language;
    supportedLanguages: Language[];
    toolbarVisible: boolean;
    isLanguageSelectOpen?: boolean;
    languageSelectFocused?: boolean;
}
export default class LanguagePicker extends PureComponent<Props, State> {
    items: object[];
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    onLanguageSelectMouseDown: (event: any) => void;
    resetLanguageSelectFocused: (event: any) => void;
    render(): JSX.Element | null;
    private handlePluginStateChange;
    private handleLanguageChange;
    private handleRemoveCodeBlock;
}
