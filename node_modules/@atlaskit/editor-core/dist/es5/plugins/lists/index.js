"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var editor_common_1 = require("@atlaskit/editor-common");
var Toolbar_1 = require("../../ui/Toolbar");
var ToolbarLists_1 = require("./ui/ToolbarLists");
var main_1 = require("./pm-plugins/main");
var input_rule_1 = require("./pm-plugins/input-rule");
var keymap_1 = require("./pm-plugins/keymap");
var listPlugin = {
    nodes: function () {
        return [
            { name: 'bulletList', node: editor_common_1.bulletList, rank: 300 },
            { name: 'orderedList', node: editor_common_1.orderedList, rank: 400 },
            { name: 'listItem', node: editor_common_1.listItem, rank: 500 },
        ];
    },
    pmPlugins: function () {
        return [
            { rank: 600, plugin: function () { return main_1.plugin; } },
            { rank: 620, plugin: function (_a) {
                    var schema = _a.schema;
                    return input_rule_1.default(schema);
                } },
            { rank: 640, plugin: function (_a) {
                    var schema = _a.schema;
                    return keymap_1.default(schema);
                } },
        ];
    },
    primaryToolbarComponent: function (_a) {
        var editorView = _a.editorView, appearance = _a.appearance, popupsMountPoint = _a.popupsMountPoint, popupsBoundariesElement = _a.popupsBoundariesElement, popupsScrollableElement = _a.popupsScrollableElement, toolbarSize = _a.toolbarSize, disabled = _a.disabled, isToolbarReducedSpacing = _a.isToolbarReducedSpacing;
        var pluginState = main_1.stateKey.getState(editorView.state);
        var isSmall = toolbarSize < Toolbar_1.ToolbarSize.L;
        var isSeparator = toolbarSize >= Toolbar_1.ToolbarSize.S;
        return (React.createElement(ToolbarLists_1.default, { isSmall: isSmall, isSeparator: isSeparator, isReducedSpacing: isToolbarReducedSpacing, disabled: disabled, editorView: editorView, pluginState: pluginState, popupsMountPoint: popupsMountPoint, popupsBoundariesElement: popupsBoundariesElement, popupsScrollableElement: popupsScrollableElement, enableTaskToolbar: !!editorView.state.schema.nodes.taskItem && appearance === 'full-page' }));
    },
};
exports.default = listPlugin;
//# sourceMappingURL=index.js.map