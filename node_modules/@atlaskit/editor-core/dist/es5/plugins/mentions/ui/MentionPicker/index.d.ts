/// <reference types="react" />
import { PureComponent } from 'react';
import { PluginKey } from 'prosemirror-state';
import { EditorView } from 'prosemirror-view';
import { ContextIdentifierProvider } from '@atlaskit/editor-common';
import { MentionProvider } from '@atlaskit/mention';
export interface Props {
    editorView?: EditorView;
    contextIdentifierProvider: Promise<ContextIdentifierProvider>;
    mentionProvider: Promise<MentionProvider>;
    pluginKey: PluginKey;
    presenceProvider?: any;
    reversePosition?: boolean;
    target?: HTMLElement;
    popupsBoundariesElement?: HTMLElement;
    popupsMountPoint?: HTMLElement;
    popupsScrollableElement?: HTMLElement;
}
export interface State {
    query?: string;
    anchorElement?: HTMLElement;
    mentionProvider?: MentionProvider;
    contextIdentifierProvider?: ContextIdentifierProvider;
    focused?: boolean;
}
export default class MentionPicker extends PureComponent<Props, State> {
    state: State;
    content?: HTMLElement;
    private pluginState?;
    private picker?;
    private pickerOpenTime;
    private pickerElapsedTime;
    private insertType?;
    componentWillMount(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentWillUpdate(nextProps: Props): void;
    componentWillReceiveProps(nextProps: Props): void;
    private setPluginState(props);
    private resolveResourceProvider(resourceProvider);
    private resolveContextIdentifierProvider(contextIdentifierPromise);
    private handlePluginStateChange;
    private handleOnOpen;
    private calculateElapsedTime;
    private handleOnClose;
    render(): JSX.Element | null;
    private handleMentionPickerRef;
    private handleSelectedMention;
    private handleSelectPrevious;
    private handleSelectNext;
    private handleSelectCurrent;
    private fireMentionInsertAnalytics;
    private getMentionsCount();
    handleSpaceTyped: () => void;
}
