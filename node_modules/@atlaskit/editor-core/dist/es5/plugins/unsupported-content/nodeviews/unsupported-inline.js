"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_1 = require("react");
var styled_components_1 = require("styled-components");
var util_shared_styles_1 = require("@atlaskit/util-shared-styles");
var InlineNode = styled_components_1.default.span(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  align-items: center;\n  background: ", ";\n  border: 1px dashed ", ";\n  border-radius: ", ";\n  box-sizing: border-box;\n  cursor: default;\n  display: inline-flex;\n  font-size: 13px;\n  margin: 0 2px;\n  min-height: 24px;\n  padding: 0 10px;\n  user-select: all;\n  vertical-align: middle;\n  white-space: nowrap;\n\n  &.ProseMirror-selectednode {\n    background: ", ";\n    outline: none;\n  }\n"], ["\n  align-items: center;\n  background: ", ";\n  border: 1px dashed ", ";\n  border-radius: ", ";\n  box-sizing: border-box;\n  cursor: default;\n  display: inline-flex;\n  font-size: 13px;\n  margin: 0 2px;\n  min-height: 24px;\n  padding: 0 10px;\n  user-select: all;\n  vertical-align: middle;\n  white-space: nowrap;\n\n  &.ProseMirror-selectednode {\n    background: ", ";\n    outline: none;\n  }\n"])), util_shared_styles_1.akColorN30, util_shared_styles_1.akColorN50, util_shared_styles_1.akBorderRadius, util_shared_styles_1.akColorN50);
var UnsupportedInlineNode = /** @class */ (function (_super) {
    tslib_1.__extends(UnsupportedInlineNode, _super);
    function UnsupportedInlineNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UnsupportedInlineNode.prototype.render = function () {
        return React.createElement(InlineNode, null, "Unsupported content");
    };
    return UnsupportedInlineNode;
}(react_1.Component));
exports.default = UnsupportedInlineNode;
var templateObject_1;
//# sourceMappingURL=unsupported-inline.js.map