import * as tslib_1 from "tslib";
import * as React from 'react';
import { Component } from 'react';
import ExpandIcon from '@atlaskit/icon/glyph/chevron-down';
import BackgroundColorIcon from '@atlaskit/icon/glyph/editor/background-color';
import Dropdown from '../../../../../ui/Dropdown';
import { analyticsDecorator as analytics } from '../../../../../analytics';
import ColorPalette from '../../../../../ui/ColorPalette';
import { TriggerWrapper, ExpandIconWrapper } from '../styles';
import { setCellAttr } from '../../../actions';
import withOuterListeners from '../../../../../ui/with-outer-listeners';
import { ToolbarButtonWide } from '../styles';
var DropdownWithOutsideListeners = withOuterListeners(Dropdown);
var BackgroundColorMenu = /** @class */ (function (_super) {
    tslib_1.__extends(BackgroundColorMenu, _super);
    function BackgroundColorMenu() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isOpen: false,
        };
        _this.setColor = function (color) {
            var _a = _this.props.editorView, state = _a.state, dispatch = _a.dispatch;
            _this.toggleOpen();
            return setCellAttr('background', color)(state, dispatch);
        };
        _this.toggleOpen = function () {
            _this.setState({ isOpen: !_this.state.isOpen });
        };
        _this.handleClose = function () {
            _this.setState({ isOpen: false });
        };
        return _this;
    }
    BackgroundColorMenu.prototype.render = function () {
        var isOpen = this.state.isOpen;
        var _a = this.props, mountPoint = _a.mountPoint, borderColors = _a.borderColors;
        return (React.createElement(DropdownWithOutsideListeners, { mountTo: mountPoint, isOpen: isOpen, fitWidth: 148, fitHeight: 100, handleClickOutside: this.handleClose, handleEscapeKeydown: this.handleClose, trigger: React.createElement(ToolbarButtonWide, { spacing: "compact", selected: isOpen, title: "Toggle background color menu", onClick: this.toggleOpen, iconBefore: React.createElement(TriggerWrapper, null,
                    React.createElement(BackgroundColorIcon, { label: "Toggle background color menu" }),
                    React.createElement(ExpandIconWrapper, null,
                        React.createElement(ExpandIcon, { label: "expand-dropdown-menu" }))) }) },
            React.createElement(ColorPalette, { palette: this.props.palette, onClick: this.setColor, borderColors: borderColors })));
    };
    tslib_1.__decorate([
        analytics('atlassian.editor.format.table.backgroundColor.button')
    ], BackgroundColorMenu.prototype, "setColor", void 0);
    return BackgroundColorMenu;
}(Component));
export default BackgroundColorMenu;
//# sourceMappingURL=index.js.map