import { inputRules } from 'prosemirror-inputrules';
import { createInputRule, leafNodeReplacementCharacter, } from '../../../utils/input-rules';
import { analyticsService } from '../../../analytics';
import { mentionPluginKey } from './main';
export function inputRulePlugin(schema) {
    var rules = [];
    if (schema.nodes.mention && schema.marks.mentionQuery) {
        var regex = new RegExp("(^|[\\s(" + leafNodeReplacementCharacter + "])@$");
        var mentionQueryRule = createInputRule(regex, function (state, match, start, end) {
            var mentionsState = mentionPluginKey.getState(state);
            if (!mentionsState.mentionProvider) {
                return undefined;
            }
            if (!mentionsState.isEnabled()) {
                return undefined;
            }
            var mark = schema.mark('mentionQuery');
            var tr = state.tr;
            analyticsService.trackEvent('atlassian.fabric.mention.picker.trigger.shortcut');
            var mentionText = schema.text('@', [mark]);
            return tr.replaceSelectionWith(mentionText, false);
        });
        rules.push(mentionQueryRule);
    }
    if (rules.length !== 0) {
        return inputRules({ rules: rules });
    }
}
export default inputRulePlugin;
//# sourceMappingURL=input-rules.js.map