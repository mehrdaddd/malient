import * as React from 'react';
import { mention, mentionQuery, WithProviders } from '@atlaskit/editor-common';
import { createPlugin, mentionPluginKey } from './pm-plugins/main';
import inputRulePlugin from './pm-plugins/input-rules';
import keymap from './pm-plugins/keymap';
import ToolbarMention from './ui/ToolbarMention';
import MentionPicker from './ui/MentionPicker';
var mentionsPlugin = {
    nodes: function () {
        return [{ name: 'mention', node: mention, rank: 1200 }];
    },
    marks: function () {
        return [{ name: 'mentionQuery', mark: mentionQuery, rank: 1200 }];
    },
    pmPlugins: function () {
        return [
            {
                rank: 300,
                plugin: function (_a) {
                    var providerFactory = _a.providerFactory;
                    return createPlugin(providerFactory);
                },
            },
            { rank: 310, plugin: function (_a) {
                    var schema = _a.schema;
                    return inputRulePlugin(schema);
                } },
            { rank: 320, plugin: function (_a) {
                    var schema = _a.schema;
                    return keymap(schema);
                } },
        ];
    },
    contentComponent: function (_a) {
        var editorView = _a.editorView, providerFactory = _a.providerFactory, popupsMountPoint = _a.popupsMountPoint, popupsBoundariesElement = _a.popupsBoundariesElement, popupsScrollableElement = _a.popupsScrollableElement;
        var renderNode = function (providers) {
            return (React.createElement(MentionPicker, { editorView: editorView, pluginKey: mentionPluginKey, mentionProvider: providers.mentionProvider, contextIdentifierProvider: providers.contextIdentifierProvider, presenceProvider: providers.presenceProvider, popupsMountPoint: popupsMountPoint, popupsBoundariesElement: popupsBoundariesElement, popupsScrollableElement: popupsScrollableElement }));
        };
        return (React.createElement(WithProviders, { providerFactory: providerFactory, providers: [
                'mentionProvider',
                'presenceProvider',
                'contextIdentifierProvider',
            ], renderNode: renderNode }));
    },
    secondaryToolbarComponent: function (_a) {
        var editorView = _a.editorView, disabled = _a.disabled;
        return (React.createElement(ToolbarMention, { editorView: editorView, pluginKey: mentionPluginKey, isDisabled: disabled, isReducedSpacing: true }));
    },
};
export default mentionsPlugin;
//# sourceMappingURL=index.js.map