import { inputRules } from 'prosemirror-inputrules';
import { createInputRule, leafNodeReplacementCharacter, } from '../../../utils/input-rules';
import { analyticsService } from '../../../analytics';
export function inputRulePlugin(schema, typeAheads) {
    var triggers = typeAheads.map(function (t) { return t.trigger; }).join('|');
    if (!triggers.length) {
        return;
    }
    var regex = new RegExp("(^|[\\s(" + leafNodeReplacementCharacter + "])(" + triggers + ")$");
    var typeAheadInputRule = createInputRule(regex, function (state, match, start, end) {
        var mark = schema.mark('typeAheadQuery', { trigger: match[0] });
        var tr = state.tr;
        analyticsService.trackEvent('atlassian.fabric.mention.picker.trigger.shortcut');
        return tr.replaceSelectionWith(schema.text(match[0], [mark]), false);
    });
    return inputRules({ rules: [typeAheadInputRule] });
}
export default inputRulePlugin;
//# sourceMappingURL=input-rules.js.map