import * as React from 'react';
import { typeAheadQuery } from '@atlaskit/editor-common';
import WithPluginState from '../../ui/WithPluginState';
import { createPlugin, pluginKey as typeAheadPluginKey, } from './pm-plugins/main';
import { inputRulePlugin } from './pm-plugins/input-rules';
import { keymapPlugin } from './pm-plugins/keymap';
import { TypeAhead } from './ui/TypeAhead';
var typeAheadPlugin = {
    name: 'typeAhead',
    marks: function () {
        return [{ name: 'typeAheadQuery', mark: typeAheadQuery, rank: 1300 }];
    },
    pmPlugins: function (typeAhead) {
        if (typeAhead === void 0) { typeAhead = []; }
        return [
            {
                rank: 600,
                plugin: function (_a) {
                    var dispatch = _a.dispatch;
                    return createPlugin(dispatch, typeAhead);
                },
            },
            {
                rank: 620,
                plugin: function (_a) {
                    var schema = _a.schema;
                    return inputRulePlugin(schema, typeAhead);
                },
            },
            {
                rank: 640,
                plugin: function () { return keymapPlugin(); },
            },
        ];
    },
    contentComponent: function (_a) {
        var editorView = _a.editorView, popupsMountPoint = _a.popupsMountPoint, popupsBoundariesElement = _a.popupsBoundariesElement, popupsScrollableElement = _a.popupsScrollableElement;
        return (React.createElement(WithPluginState, { plugins: {
                typeAhead: typeAheadPluginKey,
            }, render: function (_a) {
                var _b = _a.typeAhead, typeAhead = _b === void 0 ? {
                    active: false,
                    items: [],
                    currentIndex: 0,
                    itemsLoader: null,
                } : _b;
                var anchorElement = editorView.dom.querySelector('[data-type-ahead-query]');
                return (React.createElement(TypeAhead, { editorView: editorView, popupsMountPoint: popupsMountPoint, popupsBoundariesElement: popupsBoundariesElement, popupsScrollableElement: popupsScrollableElement, anchorElement: anchorElement, active: typeAhead.active, isLoading: !!typeAhead.itemsLoader, items: typeAhead.items, currentIndex: typeAhead.currentIndex }));
            } }));
    },
};
export default typeAheadPlugin;
//# sourceMappingURL=index.js.map