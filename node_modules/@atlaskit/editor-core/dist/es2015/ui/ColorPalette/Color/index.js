import * as tslib_1 from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import { Button, ButtonWrapper } from './styles';
import EditorDoneIcon from '@atlaskit/icon/glyph/editor/done';
import { akColorN0 } from '@atlaskit/util-shared-styles';
var Color = /** @class */ (function (_super) {
    tslib_1.__extends(Color, _super);
    function Color() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onMouseDown = function (e) {
            e.preventDefault();
        };
        _this.onClick = function (e) {
            var _a = _this.props, onClick = _a.onClick, value = _a.value;
            e.preventDefault();
            onClick(value);
        };
        return _this;
    }
    Color.prototype.render = function () {
        var _a = this.props, tabIndex = _a.tabIndex, value = _a.value, label = _a.label, isSelected = _a.isSelected, borderColor = _a.borderColor;
        var borderStyle = "1px solid " + borderColor;
        return (React.createElement(ButtonWrapper, null,
            React.createElement(Button, { onClick: this.onClick, onMouseDown: this.onMouseDown, tabIndex: tabIndex, className: "" + (isSelected ? 'selected' : ''), title: label, style: {
                    backgroundColor: value || 'transparent',
                    border: borderStyle,
                } }, isSelected && (React.createElement(EditorDoneIcon, { primaryColor: akColorN0, label: "Selected" })))));
    };
    return Color;
}(PureComponent));
export default Color;
//# sourceMappingURL=index.js.map