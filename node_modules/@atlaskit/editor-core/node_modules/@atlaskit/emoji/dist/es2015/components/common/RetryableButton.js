import * as tslib_1 from "tslib";
import * as React from 'react';
import { Component } from 'react';
import AkButton from '@atlaskit/button';
import Spinner from '@atlaskit/spinner';
var RetryableButton = /** @class */ (function (_super) {
    tslib_1.__extends(RetryableButton, _super);
    function RetryableButton(props) {
        return _super.call(this, props) || this;
    }
    RetryableButton.prototype.render = function () {
        var _a = this.props, loading = _a.loading, error = _a.error, className = _a.className, retryClassName = _a.retryClassName, appearance = _a.appearance, onSubmit = _a.onSubmit, label = _a.label;
        return error ? (React.createElement(AkButton, { className: retryClassName, appearance: "warning", onClick: onSubmit }, loading ? React.createElement(Spinner, { invertColor: false }) : 'Retry')) : (React.createElement(AkButton, { className: className, appearance: appearance, onClick: onSubmit }, loading ? React.createElement(Spinner, { invertColor: true }) : label));
    };
    return RetryableButton;
}(Component));
export default RetryableButton;
//# sourceMappingURL=RetryableButton.js.map