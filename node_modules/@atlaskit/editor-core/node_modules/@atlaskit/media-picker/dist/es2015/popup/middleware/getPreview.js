import { isGetPreviewAction } from '../actions/getPreview';
import { sendUploadEvent, } from '../actions/sendUploadEvent';
export default function (fetcher) {
    return function (store) { return function (next) { return function (action) {
        if (isGetPreviewAction(action)) {
            getPreview(fetcher, store, action);
        }
        return next(action);
    }; }; };
}
export function getPreview(fetcher, store, _a) {
    var uploadId = _a.uploadId, file = _a.file, collection = _a.collection;
    var _b = store.getState(), apiUrl = _b.apiUrl, userAuthProvider = _b.userAuthProvider;
    return userAuthProvider()
        .then(function (auth) { return fetcher.getPreview(apiUrl, auth, file.id, collection); })
        .then(function (preview) {
        return store.dispatch(sendUploadEvent({
            event: {
                name: 'upload-preview-update',
                data: {
                    file: file,
                    preview: preview,
                },
            },
            uploadId: uploadId,
        }));
    });
}
//# sourceMappingURL=getPreview.js.map