import * as tslib_1 from "tslib";
import * as React from 'react';
import { Component } from 'react';
import { GenericButton } from './genericButton';
import { OptionsIcon } from './optionsIcon';
import { ColorSample } from './styles';
var ColorButton = /** @class */ (function (_super) {
    tslib_1.__extends(ColorButton, _super);
    function ColorButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ColorButton.prototype.render = function () {
        var _a = this.props, color = _a.color, isActive = _a.isActive, onClick = _a.onClick;
        var red = color.red, green = color.green, blue = color.blue;
        var style = { backgroundColor: "rgb(" + red + ", " + green + ", " + blue + ")" };
        return (React.createElement(GenericButton, { isActive: isActive, onClick: onClick },
            React.createElement(ColorSample, { style: style }),
            React.createElement(OptionsIcon, { isActive: isActive })));
    };
    return ColorButton;
}(Component));
export { ColorButton };
//# sourceMappingURL=colorButton.js.map