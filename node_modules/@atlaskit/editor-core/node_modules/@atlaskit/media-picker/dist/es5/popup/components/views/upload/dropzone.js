'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_1 = require("react");
var button_1 = require("@atlaskit/button");
var icons_1 = require("../../../../icons");
var styled_1 = require("./styled");
var Dropzone = /** @class */ (function (_super) {
    tslib_1.__extends(Dropzone, _super);
    function Dropzone() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.clickUpload = function () {
            if (_this.props.mpBrowser) {
                _this.props.mpBrowser.browse();
            }
        };
        return _this;
    }
    Dropzone.prototype.render = function () {
        var isEmpty = this.props.isEmpty;
        return (React.createElement(styled_1.DropzoneContainer, { isEmpty: isEmpty },
            React.createElement(styled_1.DropzoneContentWrapper, null,
                React.createElement(styled_1.DefaultImage, { src: icons_1.filesIcon }),
                React.createElement(styled_1.TextWrapper, null,
                    React.createElement(styled_1.DropzoneText, null, "Drag and drop your files anywhere or"),
                    React.createElement(styled_1.ButtonWrapper, null,
                        React.createElement(button_1.default, { appearance: "default", onClick: this.clickUpload, isDisabled: !this.props.mpBrowser }, "Upload a file"))))));
    };
    return Dropzone;
}(react_1.Component));
exports.Dropzone = Dropzone;
//# sourceMappingURL=dropzone.js.map