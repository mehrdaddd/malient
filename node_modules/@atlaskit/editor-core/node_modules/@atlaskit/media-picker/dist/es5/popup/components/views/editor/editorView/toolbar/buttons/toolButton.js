"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var react_1 = require("react");
var arrow_1 = require("@atlaskit/icon/glyph/media-services/arrow");
var brush_1 = require("@atlaskit/icon/glyph/media-services/brush");
var line_1 = require("@atlaskit/icon/glyph/media-services/line");
var blur_1 = require("@atlaskit/icon/glyph/media-services/blur");
var oval_1 = require("@atlaskit/icon/glyph/media-services/oval");
var rectangle_1 = require("@atlaskit/icon/glyph/media-services/rectangle");
var text_1 = require("@atlaskit/icon/glyph/media-services/text");
var genericButton_1 = require("./genericButton");
var toolIcons = {
    line: line_1.default,
    blur: blur_1.default,
    arrow: arrow_1.default,
    brush: brush_1.default,
    oval: oval_1.default,
    rectangle: rectangle_1.default,
    text: text_1.default,
};
var ToolButton = /** @class */ (function (_super) {
    tslib_1.__extends(ToolButton, _super);
    function ToolButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolButton.prototype.render = function () {
        var _a = this.props, tool = _a.tool, activeTool = _a.activeTool, onToolClick = _a.onToolClick;
        var Icon = toolIcons[tool]; // tslint:disable-line:variable-name
        var isActive = tool === activeTool;
        var onClick = function () {
            onToolClick(tool);
        };
        return (React.createElement(genericButton_1.GenericButton, { isActive: isActive, onClick: onClick },
            React.createElement(Icon, { label: tool, size: "medium" })));
    };
    return ToolButton;
}(react_1.Component));
exports.ToolButton = ToolButton;
//# sourceMappingURL=toolButton.js.map