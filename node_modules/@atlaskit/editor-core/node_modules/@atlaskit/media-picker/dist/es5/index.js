"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var binary_1 = require("./components/binary");
exports.BinaryUploader = binary_1.BinaryUploader;
var browser_1 = require("./components/browser");
exports.Browser = browser_1.Browser;
var clipboard_1 = require("./components/clipboard");
exports.Clipboard = clipboard_1.Clipboard;
var dropzone_1 = require("./components/dropzone");
exports.Dropzone = dropzone_1.Dropzone;
var popup_1 = require("./components/popup");
exports.Popup = popup_1.Popup;
var tracker_1 = require("./outer/analytics/tracker");
var handleError_1 = require("./util/handleError");
var trackEvent = new tracker_1.UserTracker().track();
// TODO: Remove factory ??
function MediaPicker(componentName, context, pickerConfig) {
    if (context) {
        var analyticsContext = { trackEvent: trackEvent };
        switch (componentName) {
            case 'binary':
                return new binary_1.BinaryUploader(analyticsContext, context, pickerConfig);
            case 'browser':
                return new browser_1.Browser(analyticsContext, context, pickerConfig);
            case 'clipboard':
                return new clipboard_1.Clipboard(analyticsContext, context, pickerConfig);
            case 'dropzone':
                return new dropzone_1.Dropzone(analyticsContext, context, pickerConfig);
            case 'popup':
                return new popup_1.Popup(analyticsContext, context, pickerConfig);
            default:
                var message = "The component " + componentName + " does not exist";
                handleError_1.handleError('wrong_component', message);
                throw new Error(message);
        }
    }
    else {
        var constructors = {
            binary: binary_1.BinaryUploader,
            browser: browser_1.Browser,
            clipboard: clipboard_1.Clipboard,
            dropzone: dropzone_1.Dropzone,
            popup: popup_1.Popup,
        };
        return constructors[componentName];
    }
}
exports.MediaPicker = MediaPicker;
//# sourceMappingURL=index.js.map