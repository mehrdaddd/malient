export interface InternalStorage {
    storage: any;
    getItem: (key: string) => any;
    setItem: (key: string, value: any) => void;
    clear: () => void;
}
export interface Utilities {
    internalStorage: InternalStorage;
    getLocalStorage: () => Storage;
    getSessionStorage: () => Storage;
    getInternalStorage: () => InternalStorage;
    getStorage: () => Storage | InternalStorage;
    isCORSRequest: (url: string) => boolean;
    getCookieValue: (name: string) => any;
}
export interface Herment {
    STORAGE_KEY_PREAMBLE: string;
    MAXEVENTS: number;
    PUBLISH_INTERVAL: number;
    SAVE_INTERVAL: number;
    isStarted: boolean;
    config: any;
    storage: any;
    initialSaveTimeout: number;
    publishInterval: number;
    saveInterval: number;
    getAtlPath: () => any;
    getServerName: () => string;
    getProductNameFromServerName: () => string;
    getSubdomain: (fullServerName: string) => string;
    generateRandomStorageKey: () => string;
    ajaxPost: (postUrl: string, postBody: any) => void;
    parseConfig: (options: any) => any;
    pushToServer: (events: any, ajaxCall: any) => void;
    start: () => void;
    stop: () => void;
    destroy: () => void;
}
declare const herment: any;
export default herment;
