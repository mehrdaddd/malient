import * as tslib_1 from "tslib";
import * as React from 'react';
import { Component } from 'react';
import { Wrapper } from './styled';
var defaultDimensions = { width: '100%', height: '100%' };
var ElementPlaceholder = /** @class */ (function (_super) {
    tslib_1.__extends(ElementPlaceholder, _super);
    function ElementPlaceholder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ElementPlaceholder.prototype.render = function () {
        var _a = this.props, dimensions = _a.dimensions, style = _a.style, className = _a.className;
        // TODO: niccer way of doing it, TS complains :/
        // const {width, height} = {...defaultDimensions, ...dimensions};
        var width = (dimensions || defaultDimensions).width;
        var height = (dimensions || defaultDimensions).height;
        var mergedStyle = tslib_1.__assign({ width: width, height: height }, style);
        return React.createElement(Wrapper, { style: mergedStyle, className: className });
    };
    return ElementPlaceholder;
}(Component));
export default ElementPlaceholder;
//# sourceMappingURL=index.js.map