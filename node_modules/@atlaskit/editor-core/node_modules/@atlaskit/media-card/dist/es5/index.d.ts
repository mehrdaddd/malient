/// <reference types="react" />
import 'rxjs/add/observable/of';
import 'rxjs/add/operator/mergeMap';
import 'rxjs/add/operator/map';
import 'rxjs/add/observable/fromPromise';
import { MouseEvent } from 'react';
import { MediaItemDetails, MediaCollectionItem, MediaType, FileProcessingStatus } from '@atlaskit/media-core';
import { CardAction } from './actions';
import { UIAnalyticsEventInterface } from './analytics-next';
export * from './root/card';
export * from './root/cardView';
export * from './list';
export * from './actions';
export { AppCardView, AppCardModel, convertAppCardToSmartCard } from './app_2/AppCardViewV2';
export declare type CardStatus = 'uploading' | 'loading' | 'processing' | 'complete' | 'error';
export declare type CardAppearance = 'auto' | 'small' | 'image' | 'square' | 'horizontal';
export declare type CardDimensionValue = number | string;
export interface CardDimensions {
    width?: CardDimensionValue;
    height?: CardDimensionValue;
}
export interface CardEvent {
    event: MouseEvent<HTMLElement>;
    mediaItemDetails?: MediaItemDetails;
}
export interface CardListEvent {
    event: MouseEvent<HTMLElement>;
    collectionName: string;
    mediaCollectionItem: MediaCollectionItem;
}
export interface OnSelectChangeFuncResult {
    selected: boolean;
    mediaItemDetails?: MediaItemDetails;
}
export interface OnSelectChangeFunc {
    (result: OnSelectChangeFuncResult): void;
}
export interface OnLoadingChangeState {
    readonly type: CardStatus;
    readonly payload?: Error | MediaItemDetails;
}
export interface OnLoadingChangeFunc {
    (state: OnLoadingChangeState): void;
}
export interface SharedCardProps {
    readonly appearance?: CardAppearance;
    readonly dimensions?: CardDimensions;
    readonly actions?: Array<CardAction>;
    readonly selectable?: boolean;
    readonly selected?: boolean;
}
export interface CardOnClickCallback {
    (result: CardEvent, analyticsEvent?: UIAnalyticsEventInterface): void;
}
export interface CardEventProps {
    readonly onClick?: CardOnClickCallback;
    readonly onMouseEnter?: (result: CardEvent) => void;
    readonly onSelectChange?: OnSelectChangeFunc;
    readonly onLoadingChange?: OnLoadingChangeFunc;
}
export interface AnalyticsFileAttributes {
    fileMediatype?: MediaType;
    fileMimetype?: string;
    fileStatus?: FileProcessingStatus;
    fileSize?: number;
}
export interface AnalyticsLinkAttributes {
    linkDomain: string;
}
export interface AnalyticsViewAttributes {
    viewPreview: boolean;
    viewActionmenu: boolean;
    viewSize?: CardAppearance;
}
export interface BaseAnalyticsContext {
    packageVersion: string;
    packageName: string;
    componentName: string;
    actionSubject: string;
    actionSubjectId: string | null;
}
export interface CardAnalyticsContext extends BaseAnalyticsContext {
}
export interface CardViewAnalyticsContext extends BaseAnalyticsContext {
    loadStatus: 'fail' | 'loading_metadata' | 'uploading' | 'complete';
    type: 'file' | 'link' | 'smart';
    viewAttributes: AnalyticsViewAttributes;
    fileAttributes?: AnalyticsFileAttributes;
    linkAttributes?: AnalyticsLinkAttributes;
}
