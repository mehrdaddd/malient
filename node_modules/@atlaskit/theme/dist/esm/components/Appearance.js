import _Object$keys from 'babel-runtime/core-js/object/keys';
import _extends from 'babel-runtime/helpers/extends';
import _typeof from 'babel-runtime/helpers/typeof';


export default (function (_ref) {
  var children = _ref.children,
      props = _ref.props,
      theme = _ref.theme;

  var appearance = (typeof props === 'undefined' ? 'undefined' : _typeof(props)) === 'object' ? 'default' : props;
  var merged = (typeof props === 'undefined' ? 'undefined' : _typeof(props)) === 'object' ? _extends({}, props) : {};
  _Object$keys(theme).forEach(function (key) {
    if (!(key in merged)) {
      merged[key] = theme[key]({ appearance: appearance });
    }
  });
  return children(merged);
});