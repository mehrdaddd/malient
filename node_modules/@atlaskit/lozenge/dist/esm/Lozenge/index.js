import _extends from 'babel-runtime/helpers/extends';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import { Appearance } from '@atlaskit/theme';
import React, { PureComponent } from 'react';
import Container from './styledContainer';
import Content from './styledContent';
import { boldStyles, defaultStyles } from './theme';

var Lozenge = function (_PureComponent) {
  _inherits(Lozenge, _PureComponent);

  function Lozenge() {
    _classCallCheck(this, Lozenge);

    return _possibleConstructorReturn(this, (Lozenge.__proto__ || _Object$getPrototypeOf(Lozenge)).apply(this, arguments));
  }

  _createClass(Lozenge, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          appearance = _props.appearance,
          isBold = _props.isBold,
          children = _props.children;


      return React.createElement(
        Appearance,
        {
          props: appearance,
          theme: isBold ? boldStyles : defaultStyles
        },
        function (styleProps) {
          return React.createElement(
            Container,
            _extends({}, styleProps, { isBold: isBold }),
            React.createElement(
              Content,
              null,
              children
            )
          );
        }
      );
    }
  }]);

  return Lozenge;
}(PureComponent);

Lozenge.defaultProps = {
  isBold: false,
  appearance: 'default'
};
export default Lozenge;