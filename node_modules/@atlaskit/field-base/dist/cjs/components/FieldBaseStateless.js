'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _inlineDialog = require('@atlaskit/inline-dialog');

var _inlineDialog2 = _interopRequireDefault(_inlineDialog);

var _Content = require('../styled/Content');

var _ValidationElement = require('./ValidationElement');

var _ValidationElement2 = _interopRequireDefault(_ValidationElement);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FieldBaseStateless = function (_Component) {
  (0, _inherits3.default)(FieldBaseStateless, _Component);

  function FieldBaseStateless() {
    (0, _classCallCheck3.default)(this, FieldBaseStateless);
    return (0, _possibleConstructorReturn3.default)(this, (FieldBaseStateless.__proto__ || (0, _getPrototypeOf2.default)(FieldBaseStateless)).apply(this, arguments));
  }

  (0, _createClass3.default)(FieldBaseStateless, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.props.shouldReset) {
        this.props.onBlur();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          appearance = _props.appearance,
          children = _props.children,
          invalidMessage = _props.invalidMessage,
          isCompact = _props.isCompact,
          isDialogOpen = _props.isDialogOpen,
          isDisabled = _props.isDisabled,
          isFitContainerWidthEnabled = _props.isFitContainerWidthEnabled,
          isFocused = _props.isFocused,
          isInvalid = _props.isInvalid,
          isLoading = _props.isLoading,
          isPaddingDisabled = _props.isPaddingDisabled,
          isReadOnly = _props.isReadOnly,
          maxWidth = _props.maxWidth,
          onBlur = _props.onBlur,
          onDialogBlur = _props.onDialogBlur,
          onDialogClick = _props.onDialogClick,
          onDialogFocus = _props.onDialogFocus,
          onFocus = _props.onFocus,
          isValidationHidden = _props.isValidationHidden;


      function getAppearance(a) {
        if (isDisabled) return 'disabled';
        if (isInvalid) return 'invalid';

        return a;
      }

      return _react2.default.createElement(
        _Content.ContentWrapper,
        {
          disabled: isDisabled,
          maxWidth: maxWidth,
          grow: isFitContainerWidthEnabled
        },
        _react2.default.createElement(
          _inlineDialog2.default,
          {
            content: invalidMessage,
            isOpen: isDialogOpen && !!invalidMessage && !isValidationHidden,
            onContentBlur: onDialogBlur,
            onContentClick: onDialogClick,
            onContentFocus: onDialogFocus,
            position: 'right middle',
            shouldFlip: ['top']
          },
          _react2.default.createElement(
            _Content.ChildWrapper,
            { compact: isCompact },
            _react2.default.createElement(
              _Content.Content,
              {
                appearance: getAppearance(appearance),
                compact: isCompact,
                disabled: isDisabled,
                isFocused: isFocused,
                invalid: isInvalid && !isFocused,
                none: appearance === 'none',
                onBlurCapture: onBlur,
                onFocusCapture: onFocus,
                paddingDisabled: isPaddingDisabled,
                readOnly: isReadOnly,
                subtle: appearance === 'subtle'
              },
              children,
              !isValidationHidden ? _react2.default.createElement(_ValidationElement2.default, {
                isDisabled: isDisabled,
                isInvalid: isInvalid,
                isLoading: isLoading
              }) : null
            )
          )
        )
      );
    }
  }]);
  return FieldBaseStateless;
}(_react.Component);

FieldBaseStateless.defaultProps = {
  appearance: 'standard',
  invalidMessage: '',
  isCompact: false,
  isDialogOpen: false,
  isDisabled: false,
  isFitContainerWidthEnabled: false,
  isFocused: false,
  isInvalid: false,
  isLoading: false,
  isPaddingDisabled: false,
  isReadOnly: false,
  onDialogBlur: function onDialogBlur() {},
  onDialogClick: function onDialogClick() {},
  onDialogFocus: function onDialogFocus() {},
  shouldReset: false,
  isValidationHidden: false
};
exports.default = FieldBaseStateless;