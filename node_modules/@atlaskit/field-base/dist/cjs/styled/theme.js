'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBorderColorHover = exports.getBorderColorFocus = exports.getBorderColor = exports.getBackgroundColorHover = exports.getBackgroundColorFocus = exports.getBackgroundColor = undefined;

var _theme = require('@atlaskit/theme');

// The following are the name for color mappings in @atlaskit/themes
// The exports are the functions, not the objects, so could not be used here
var codeBlock = { light: _theme.colors.N20, dark: _theme.colors.DN80 };

var hover = { light: _theme.colors.N20, dark: _theme.colors.DN30 };
var disabled = { light: _theme.colors.N20, dark: _theme.colors.DN20 };
// For validation red is the new 'yellow' which was { light: colors.Y300, dark: colors.Y300 }
var red = { light: _theme.colors.R400, dark: _theme.colors.R400 };
// linkOutline has been altered based on the colors in the text-field spec
var linkOutline = { light: _theme.colors.B100, dark: _theme.colors.B75 };
// The following do not yet have a darkmode 'map': N20A, N10

var getBackgroundColor = exports.getBackgroundColor = (0, _theme.themed)('appearance', {
  standard: { light: _theme.colors.N10, dark: _theme.colors.DN10 },
  disabled: disabled,
  invalid: { light: _theme.colors.N10, dark: _theme.colors.DN10 },
  subtle: { light: 'transparent', dark: 'transparent' },
  none: { light: 'transparent', dark: 'transparent' }
});

var getBackgroundColorFocus = exports.getBackgroundColorFocus = (0, _theme.themed)('appearance', {
  standard: { light: _theme.colors.N0, dark: _theme.colors.DN10 },
  disabled: disabled,
  invalid: { light: _theme.colors.N0, dark: _theme.colors.DN10 },
  subtle: { light: _theme.colors.N0, dark: _theme.colors.DN10 },
  none: { light: 'transparent', dark: 'transparent' }
});

var getBackgroundColorHover = exports.getBackgroundColorHover = (0, _theme.themed)('appearance', {
  standard: hover,
  disabled: disabled,
  invalid: hover,
  subtle: hover,
  none: { light: 'transparent', dark: 'transparent' }
});

var getBorderColor = exports.getBorderColor = (0, _theme.themed)('appearance', {
  standard: codeBlock,
  disabled: { light: _theme.colors.N20A, dark: _theme.colors.DN20A },
  invalid: red,
  subtle: { light: 'transparent', dark: 'transparent' },
  none: { light: 'transparent', dark: 'transparent' }
});

var getBorderColorFocus = exports.getBorderColorFocus = (0, _theme.themed)('appearance', {
  standard: linkOutline,
  disabled: { light: _theme.colors.N20A, dark: _theme.colors.DN20A },
  invalid: linkOutline,
  subtle: linkOutline,
  none: { light: 'transparent', dark: 'transparent' }
});

var getBorderColorHover = exports.getBorderColorHover = (0, _theme.themed)('appearance', {
  standard: codeBlock,
  disabled: { light: _theme.colors.N20A, dark: _theme.colors.DN20A },
  invalid: red,
  subtle: codeBlock,
  none: { light: 'transparent', dark: 'transparent' }
});