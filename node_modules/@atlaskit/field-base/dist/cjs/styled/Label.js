'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RequiredIndicator = exports.LabelInner = exports.LabelWrapper = undefined;

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n    padding: ', 'px ', 'px ', 'px ', 'px;\n  '], ['\n    padding: ', 'px ', 'px ', 'px ', 'px;\n  ']),
    _templateObject2 = (0, _taggedTemplateLiteral3.default)(['\n  display: block;\n'], ['\n  display: block;\n']),
    _templateObject3 = (0, _taggedTemplateLiteral3.default)(['\n  color: ', ';\n  font-size: ', 'px;\n  font-weight: 600;\n  line-height: ', ';\n  ', ';\n\n  ', ';\n'], ['\n  color: ', ';\n  font-size: ', 'px;\n  font-weight: 600;\n  line-height: ', ';\n  ', ';\n\n  ', ';\n']),
    _templateObject4 = (0, _taggedTemplateLiteral3.default)(['\n  color: ', ';\n  padding-left: 2px;\n'], ['\n  color: ', ';\n  padding-left: 2px;\n']);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _theme = require('@atlaskit/theme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var spacing = (0, _theme.gridSize)();
var fontSize = 12;
var innerHeight = spacing * 2; // 16px
var lineHeight = innerHeight / fontSize;

var getPadding = function getPadding(_ref) {
  var firstChild = _ref.firstChild,
      inlineEdit = _ref.inlineEdit;

  var right = 0;
  var bottom = spacing / 2;
  var left = 0;
  var top = spacing * 2.5;

  if (inlineEdit) {
    bottom = 0;
    left = spacing;
    top = spacing;
  }
  if (firstChild) {
    top = spacing / 2;
  }

  return (0, _styledComponents.css)(_templateObject, top, right, bottom, left);
};

var LabelWrapper = exports.LabelWrapper = _styledComponents2.default.label(_templateObject2);

var getColor = (0, _theme.themed)({ light: _theme.colors.N200, dark: _theme.colors.DN90 });
var getDisabledColor = (0, _theme.themed)({ light: _theme.colors.N60, dark: _theme.colors.DN300 });

var LabelInner = exports.LabelInner = _styledComponents2.default.div(_templateObject3, function (props) {
  return props.isDisabled ? getDisabledColor(props) : getColor(props);
}, fontSize, lineHeight, getPadding, function (p) {
  return p.isHidden && 'display: none;';
});

var RequiredIndicator = exports.RequiredIndicator = _styledComponents2.default.span(_templateObject4, _theme.colors.red);