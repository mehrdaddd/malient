import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';

import { LabelWrapper, RequiredIndicator, LabelInner } from '../styled/Label';

var Label = function (_Component) {
  _inherits(Label, _Component);

  function Label() {
    _classCallCheck(this, Label);

    return _possibleConstructorReturn(this, (Label.__proto__ || _Object$getPrototypeOf(Label)).apply(this, arguments));
  }

  _createClass(Label, [{
    key: 'render',


    /* eslint-disable jsx-a11y/no-static-element-interactions */
    value: function render() {
      var _props = this.props,
          appearance = _props.appearance,
          children = _props.children,
          htmlFor = _props.htmlFor,
          isFirstChild = _props.isFirstChild,
          isLabelHidden = _props.isLabelHidden,
          isDisabled = _props.isDisabled,
          isRequired = _props.isRequired,
          label = _props.label,
          onClick = _props.onClick;


      return React.createElement(
        LabelWrapper,
        { htmlFor: htmlFor },
        React.createElement(
          LabelInner,
          {
            isHidden: isLabelHidden,
            inlineEdit: appearance === 'inline-edit',
            firstChild: isFirstChild,
            isDisabled: isDisabled
          },
          React.createElement(
            'span',
            { onClick: onClick },
            label
          ),
          isRequired ? React.createElement(
            RequiredIndicator,
            { role: 'presentation' },
            '*'
          ) : null
        ),
        children
      );
    }
  }]);

  return Label;
}(Component);

Label.defaultProps = {
  appearance: 'default'
};
export default Label;