import * as tslib_1 from "tslib";
import * as React from 'react';
import { PureComponent } from 'react';
import ReactionPicker from './reaction-picker';
var ResourcedReactionPicker = /** @class */ (function (_super) {
    tslib_1.__extends(ResourcedReactionPicker, _super);
    function ResourcedReactionPicker(props) {
        var _this = _super.call(this, props) || this;
        _this.handleReactionPickerSelection = function (emojiId) {
            var _a = _this.props, containerAri = _a.containerAri, ari = _a.ari;
            var reactionsProvider = _this.state.reactionsProvider;
            if (reactionsProvider) {
                reactionsProvider.toggleReaction(containerAri, ari, emojiId);
            }
        };
        _this.state = {
            reactionsProvider: null,
        };
        return _this;
    }
    ResourcedReactionPicker.prototype.refreshReactions = function (reactionsProviderPromise) {
        var _this = this;
        if (reactionsProviderPromise) {
            reactionsProviderPromise.then(function (reactionsProvider) {
                _this.setState({
                    reactionsProvider: reactionsProvider,
                });
            });
        }
    };
    ResourcedReactionPicker.prototype.componentDidMount = function () {
        if (!this.state.reactionsProvider) {
            this.refreshReactions(this.props.reactionsProvider);
        }
    };
    ResourcedReactionPicker.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.reactionsProvider !== this.props.reactionsProvider) {
            this.refreshReactions(nextProps.reactionsProvider);
        }
    };
    ResourcedReactionPicker.prototype.render = function () {
        var reactionsProvider = this.state.reactionsProvider;
        if (!reactionsProvider) {
            return null;
        }
        var _a = this.props, boundariesElement = _a.boundariesElement, emojiProvider = _a.emojiProvider, miniMode = _a.miniMode, className = _a.className, allowAllEmojis = _a.allowAllEmojis;
        return (React.createElement(ReactionPicker, { emojiProvider: emojiProvider, onSelection: this.handleReactionPickerSelection, miniMode: miniMode, boundariesElement: boundariesElement, className: className, allowAllEmojis: allowAllEmojis }));
    };
    return ResourcedReactionPicker;
}(PureComponent));
export default ResourcedReactionPicker;
//# sourceMappingURL=resourced-reaction-picker.js.map