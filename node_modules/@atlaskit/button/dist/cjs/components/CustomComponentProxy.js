'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _analyticsNext = require('@atlaskit/analytics-next');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Styling a button is complicated and there are a number of properties which inform its appearance.
 * We want to be able to style any arbitrary component like a button, but we don't want to pass all
 * of these appearance-related props through to the component or underlying DOM node. This component
 * acts as a layer which catches the appearance-related properties so that they can be used by
 * styled-components, then passes the rest of the props on to the custom component.
 */
var CustomComponentProxy = function (_Component) {
  (0, _inherits3.default)(CustomComponentProxy, _Component);

  function CustomComponentProxy() {
    (0, _classCallCheck3.default)(this, CustomComponentProxy);
    return (0, _possibleConstructorReturn3.default)(this, (CustomComponentProxy.__proto__ || (0, _getPrototypeOf2.default)(CustomComponentProxy)).apply(this, arguments));
  }

  (0, _createClass3.default)(CustomComponentProxy, [{
    key: 'render',
    value: function render() {
      var _cleanProps = (0, _analyticsNext.cleanProps)(this.props),
          appearance = _cleanProps.appearance,
          children = _cleanProps.children,
          component = _cleanProps.component,
          isActive = _cleanProps.isActive,
          isDisabled = _cleanProps.isDisabled,
          isFocus = _cleanProps.isFocus,
          isHover = _cleanProps.isHover,
          isSelected = _cleanProps.isSelected,
          shouldFitContainer = _cleanProps.shouldFitContainer,
          fit = _cleanProps.fit,
          iconBefore = _cleanProps.iconBefore,
          iconAfter = _cleanProps.iconAfter,
          isLoading = _cleanProps.isLoading,
          proxiedProps = (0, _objectWithoutProperties3.default)(_cleanProps, ['appearance', 'children', 'component', 'isActive', 'isDisabled', 'isFocus', 'isHover', 'isSelected', 'shouldFitContainer', 'fit', 'iconBefore', 'iconAfter', 'isLoading']);

      if (!component) throw new Error('No custom component provided while trying to use custom button component');
      var ProxiedComponent = component;
      // $FlowFixMe
      return _react2.default.createElement(
        ProxiedComponent,
        proxiedProps,
        children
      );
    }
  }]);
  return CustomComponentProxy;
}(_react.Component);

exports.default = CustomComponentProxy;