'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _theme = require('@atlaskit/theme');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getAlignment = function getAlignment(p) {
  return p.followsIcon ? 'baseline' : 'center';
};
/* eslint-disable react/no-unused-prop-types */

/* eslint-disable react/prop-types */

var gridSizeDiv2 = _theme.math.divide(_theme.gridSize, 2);

// $FlowFixMe TEMPORARY
var getMargin = function getMargin(p) {
  return p.spacing === 'none' ? 0 : '0 ' + gridSizeDiv2(p) + 'px';
};

var ButtonContent = function ButtonContent(props) {
  var style = (0, _extends3.default)({
    alignItems: getAlignment(props),
    alignSelf: getAlignment(props),
    flex: '1 1 auto',
    margin: getMargin(props),
    maxWidth: '100%',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap'
  }, (0, _utils.getLoadingStyle)(props));
  return _react2.default.createElement(
    'span',
    { style: style },
    props.children
  );
};

exports.default = ButtonContent;