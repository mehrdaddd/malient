'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateTd = exports.DateDiv = undefined;

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n  background-color: ', ';\n  border: 2px solid ', ';\n  border-radius: 4px;\n  color: ', ';\n  cursor: ', ';\n  font-size: 12px;\n  padding: 4px 9px;\n  position: relative;\n  text-align: center;\n\n  ', ' &:hover {\n    background-color: ', ';\n    color: ', ';\n  }\n'], ['\n  background-color: ', ';\n  border: 2px solid ', ';\n  border-radius: 4px;\n  color: ', ';\n  cursor: ', ';\n  font-size: 12px;\n  padding: 4px 9px;\n  position: relative;\n  text-align: center;\n\n  ', ' &:hover {\n    background-color: ', ';\n    color: ', ';\n  }\n']),
    _templateObject2 = (0, _taggedTemplateLiteral3.default)(['\n          font-weight: bold;\n          &::after {\n            background-color: ', ';\n            bottom: 1px;\n            content: \'\';\n            display: block;\n            height: 1px;\n            left: 2px;\n            position: absolute;\n            right: 2px;\n          }\n        '], ['\n          font-weight: bold;\n          &::after {\n            background-color: ', ';\n            bottom: 1px;\n            content: \'\';\n            display: block;\n            height: 1px;\n            left: 2px;\n            position: absolute;\n            right: 2px;\n          }\n        ']),
    _templateObject3 = (0, _taggedTemplateLiteral3.default)(['\n  border: 0;\n  padding: 0;\n  text-align: center;\n'], ['\n  border: 0;\n  padding: 0;\n  text-align: center;\n']);

/* eslint no-confusing-arrow: 0 */

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _theme = require('@atlaskit/theme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getTransparent = (0, _theme.themed)({ light: 'transparent', dark: 'transparent' });
var selectedBackground = (0, _theme.themed)({ light: _theme.colors.N500, dark: _theme.colors.N0 });
var prevSelectedBackground = (0, _theme.themed)({ light: _theme.colors.B75, dark: _theme.colors.B75 });

var textDisabled = (0, _theme.themed)({ light: _theme.colors.N40, dark: _theme.colors.N40 });
var textHoverSelected = (0, _theme.themed)({ light: _theme.colors.N600, dark: _theme.colors.N600 });
var textPreviouslySelected = (0, _theme.themed)({
  light: _theme.colors.N600,
  dark: _theme.colors.N600
});
var textSelected = (0, _theme.themed)({ light: _theme.colors.N0, dark: _theme.colors.N700 });
var textSibling = (0, _theme.themed)({ light: _theme.colors.N80, dark: _theme.colors.N80 });

var hoverPreviouslySelectedBackground = (0, _theme.themed)({
  light: _theme.colors.B75,
  dark: _theme.colors.B75
});
var isActiveBackground = (0, _theme.themed)({ light: _theme.colors.B75, dark: _theme.colors.B75 });
var hoverBackground = (0, _theme.themed)({ light: _theme.colors.N30A, dark: _theme.colors.N900 });

var getBackgroundColorSelectedAfter = (0, _theme.themed)({
  light: _theme.colors.N700,
  dark: _theme.colors.N700
});

var getBackgroundColorsAfter = function getBackgroundColorsAfter(props) {
  return props.selected ? getBackgroundColorSelectedAfter(props) : _theme.colors.primary(props);
};

var getBorderColorFocused = (0, _theme.themed)({ light: _theme.colors.B100, dark: _theme.colors.B75 });

var getBorderColors = function getBorderColors(props) {
  return props.focused ? getBorderColorFocused(props) : getTransparent(props);
};

function getBackgroundColor(props) {
  if (props.selected) return selectedBackground(props);
  if (props.previouslySelected) return prevSelectedBackground(props);
  return getTransparent(props);
}

function getColor(props) {
  if (props.disabled) return textDisabled(props);
  if (props.selected) return textSelected(props);
  if (props.previouslySelected) return textPreviouslySelected(props);
  if (props.isToday) return _theme.colors.primary(props);
  if (props.sibling) return textSibling(props);
  return _theme.colors.text(props);
}

var getCursor = function getCursor(_ref) {
  var disabled = _ref.disabled;
  return disabled ? 'not-allowed' : 'pointer';
};

function getHoverBackgroundColor(props) {
  if (props.disabled) return getTransparent(props);
  if (props.previouslySelected) return hoverPreviouslySelectedBackground(props);
  if (props.isActive) return isActiveBackground(props);
  return hoverBackground(props);
}

var getHoverColor = function getHoverColor(props) {
  if (props.disabled) return textDisabled(props);
  if (props.selected || props.previouslySelected || props.isActive) return textHoverSelected(props);
  return _theme.colors.text(props);
};

var DateDiv = exports.DateDiv = _styledComponents2.default.div(_templateObject, getBackgroundColor, getBorderColors, getColor, getCursor, function (props) {
  return props.isToday ? (0, _styledComponents.css)(_templateObject2, getBackgroundColorsAfter(props)) : '';
}, getHoverBackgroundColor, getHoverColor);

var DateTd = exports.DateTd = _styledComponents2.default.td(_templateObject3);