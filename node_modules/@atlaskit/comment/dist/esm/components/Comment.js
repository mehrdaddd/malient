import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';

import CommentLayout from './Layout';
import HeaderItems from './Header';
import FooterItems from './Footer';
import { Content } from '../styled/CommentStyles';

var Comment = function (_Component) {
  _inherits(Comment, _Component);

  function Comment() {
    _classCallCheck(this, Comment);

    return _possibleConstructorReturn(this, (Comment.__proto__ || _Object$getPrototypeOf(Comment)).apply(this, arguments));
  }

  _createClass(Comment, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          actions = _props.actions,
          author = _props.author,
          avatar = _props.avatar,
          children = _props.children,
          content = _props.content,
          edited = _props.edited,
          errorActions = _props.errorActions,
          errorIconLabel = _props.errorIconLabel,
          highlighted = _props.highlighted,
          isError = _props.isError,
          isSaving = _props.isSaving,
          restrictedTo = _props.restrictedTo,
          savingText = _props.savingText,
          time = _props.time,
          type = _props.type,
          id = _props.id;


      var headerProps = {
        author: author,
        edited: edited,
        isError: isError,
        isSaving: isSaving,
        restrictedTo: restrictedTo,
        savingText: savingText,
        time: time,
        type: type
      };
      var footerProps = {
        actions: actions,
        errorActions: errorActions,
        errorIconLabel: errorIconLabel,
        isError: isError,
        isSaving: isSaving
      };
      var layoutContent = React.createElement(
        'div',
        null,
        React.createElement(HeaderItems, headerProps),
        React.createElement(
          Content,
          { isDisabled: isSaving || isError },
          content
        ),
        React.createElement(FooterItems, footerProps)
      );

      return React.createElement(
        CommentLayout,
        {
          id: id,
          avatar: avatar,
          content: layoutContent,
          highlighted: highlighted
        },
        children
      );
    }
  }]);

  return Comment;
}(Component);

Comment.defaultProps = {
  actions: [],
  restrictedTo: '',
  highlighted: false,
  isSaving: false,
  savingText: 'Sending...',
  isError: false,
  errorActions: [],
  errorIconLabel: ''
};
export default Comment;