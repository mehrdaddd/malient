import { Node as PmNode } from 'prosemirror-model';
import { TableCellContent } from './doc';
export declare const tableBackgroundColorPalette: Map<string, string>;
/** New borders for colors in the color picker */
export declare const tableBackgroundBorderColors: {
    blue: string;
    teal: string;
    red: string;
    grey: string;
    purple: string;
    green: string;
    yellow: string;
    white: string;
};
export declare const tableBackgroundColorNames: Map<string, string>;
export declare function calcTableColumnWidths(node: PmNode): number[];
export declare type Layout = 'default' | 'full-width' | 'wide';
export interface TableAttributes {
    isNumberColumnEnabled?: boolean;
    layout?: Layout;
    __autoSize?: boolean;
}
/**
 * @name table_node
 */
export interface Table {
    type: 'table';
    attrs?: TableAttributes;
    /**
     * @minItems 1
     */
    content: Array<TableRow>;
}
/**
 * @name table_row_node
 */
export interface TableRow {
    type: 'tableRow';
    /**
     * @minItems 1
     */
    content: Array<TableHeader> | Array<TableCell>;
}
/**
 * @name table_cell_node
 */
export interface TableCell {
    type: 'tableCell';
    attrs?: CellAttributes;
    /**
     * @minItems 1
     */
    content: TableCellContent;
}
/**
 * @name table_header_node
 */
export interface TableHeader {
    type: 'tableHeader';
    attrs?: CellAttributes;
    /**
     * @minItems 1
     */
    content: TableCellContent;
}
export interface CellAttributes {
    colspan?: number;
    rowspan?: number;
    colwidth?: number[];
    background?: string;
}
export declare const table: any;
export declare const tableToJSON: (node: PmNode) => {
    attrs: {};
};
export declare const tableRow: any;
export declare const tableCell: any;
export declare const toJSONTableCell: (node: PmNode) => {
    attrs: {};
};
export declare const tableHeader: any;
export declare const toJSONTableHeader: (node: PmNode) => {
    attrs: {};
};
