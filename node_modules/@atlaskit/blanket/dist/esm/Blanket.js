import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import Div from './styled';

var Blanket = function (_PureComponent) {
  _inherits(Blanket, _PureComponent);

  function Blanket() {
    _classCallCheck(this, Blanket);

    return _possibleConstructorReturn(this, (Blanket.__proto__ || _Object$getPrototypeOf(Blanket)).apply(this, arguments));
  }

  _createClass(Blanket, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          canClickThrough = _props.canClickThrough,
          isTinted = _props.isTinted,
          onBlanketClicked = _props.onBlanketClicked;

      var onClick = canClickThrough ? null : onBlanketClicked;
      var containerProps = { canClickThrough: canClickThrough, isTinted: isTinted, onClick: onClick };

      return React.createElement(Div, containerProps);
    }
  }]);

  return Blanket;
}(PureComponent);

Blanket.defaultProps = {
  canClickThrough: false,
  isTinted: false,
  onBlanketClicked: function onBlanketClicked() {}
};
export default Blanket;