webpackJsonp([1],{

/***/ 4087:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__ = __webpack_require__(694);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_media_common__ = __webpack_require__(317);\n\n\n\nvar PickerFacade = /** @class */ (function () {\n    function PickerFacade(pickerType, config, pickerConfig) {\n        var _this = this;\n        this.onStartListeners = [];\n        this.onDragListeners = [];\n        this.handleUploadsStart = function (event) {\n            var files = event.files;\n            var states = files.map(function (file) {\n                var state = _this.stateManager.newState(file, 'uploading');\n                _this.stateManager.updateState(state.id, state);\n                return state;\n            });\n            _this.onStartListeners.forEach(function (cb) { return cb.call(cb, states); });\n        };\n        this.handleUploadStatusUpdate = function (event) {\n            var file = event.file, progress = event.progress;\n            var tempId = _this.generateTempId(file.id);\n            var currentState = _this.stateManager.getState(tempId);\n            var currentStatus = (currentState && currentState.status) || 'unknown';\n            var state = _this.stateManager.newState(file, currentStatus === 'unknown' || currentStatus === 'preview'\n                ? 'uploading'\n                : currentStatus);\n            state.progress = progress && progress.portion;\n            _this.stateManager.updateState(state.id, state);\n        };\n        this.handleUploadProcessing = function (event) {\n            var file = event.file;\n            var state = _this.stateManager.newState(file, 'processing', file.publicId);\n            _this.stateManager.updateState(state.id, state);\n        };\n        this.handleUploadError = function (_a) {\n            var error = _a.error;\n            if (!error || !error.fileId) {\n                var err = new Error(\"Media: unknown upload-error received from Media Picker: \" + (error &&\n                    error.name));\n                _this.errorReporter.captureException(err);\n                return;\n            }\n            var tempId = _this.generateTempId(error.fileId);\n            _this.stateManager.updateState(tempId, {\n                id: tempId,\n                status: 'error',\n                error: error && { description: error.description, name: error.name },\n            });\n        };\n        this.handleUploadEnd = function (event) {\n            var file = event.file;\n            var state = _this.stateManager.newState(file, 'ready', file.publicId);\n            state.progress = 1;\n            state.ready = true;\n            _this.stateManager.updateState(state.id, state);\n        };\n        this.handleUploadPreviewUpdate = function (event) {\n            var file = event.file, preview = event.preview;\n            var state = _this.stateManager.newState(file, 'preview');\n            state.thumbnail = preview;\n            state.preview = true;\n            // Add timestamp to image file names on paste @see ED-3584\n            if (_this.pickerType === 'clipboard' && Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"u\" /* isImage */])(file.type)) {\n                state.fileName = Object(__WEBPACK_IMPORTED_MODULE_2__utils_media_common__[\"a\" /* appendTimestamp */])(file.name, file.creationDate);\n            }\n            _this.stateManager.updateState(state.id, state);\n        };\n        this.handleDragEnter = function () {\n            _this.onDragListeners.forEach(function (cb) { return cb.call(cb, 'enter'); });\n        };\n        this.handleDragLeave = function () {\n            _this.onDragListeners.forEach(function (cb) { return cb.call(cb, 'leave'); });\n        };\n        this.pickerType = pickerType;\n        this.errorReporter = config.errorReporter;\n        this.stateManager = config.stateManager;\n        var picker;\n        if (pickerType === 'customMediaPicker') {\n            picker = this.picker = pickerConfig;\n        }\n        else {\n            picker = this.picker = Object(__WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"e\" /* MediaPicker */])(pickerType, config.context, pickerConfig);\n        }\n        picker.on('uploads-start', this.handleUploadsStart);\n        picker.on('upload-preview-update', this.handleUploadPreviewUpdate);\n        picker.on('upload-processing', this.handleUploadProcessing);\n        picker.on('upload-status-update', this.handleUploadStatusUpdate);\n        picker.on('upload-error', this.handleUploadError);\n        picker.on('upload-end', this.handleUploadEnd);\n        if (picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"d\" /* Dropzone */]) {\n            picker.on('drag-enter', this.handleDragEnter);\n            picker.on('drag-leave', this.handleDragLeave);\n        }\n        if (picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"d\" /* Dropzone */] || picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"c\" /* Clipboard */]) {\n            picker.activate();\n        }\n    }\n    Object.defineProperty(PickerFacade.prototype, \"type\", {\n        get: function () {\n            return this.pickerType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PickerFacade.prototype.destroy = function () {\n        var picker = this.picker;\n        if (!picker) {\n            return;\n        }\n        picker.removeAllListeners('uploads-start');\n        picker.removeAllListeners('upload-preview-update');\n        picker.removeAllListeners('upload-status-update');\n        picker.removeAllListeners('upload-processing');\n        picker.removeAllListeners('upload-error');\n        picker.removeAllListeners('upload-end');\n        if (picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"d\" /* Dropzone */]) {\n            picker.removeAllListeners('drag-enter');\n            picker.removeAllListeners('drag-leave');\n        }\n        this.onStartListeners = [];\n        this.onDragListeners = [];\n        try {\n            if (picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"d\" /* Dropzone */] || picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"c\" /* Clipboard */]) {\n                picker.deactivate();\n            }\n            if (picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"f\" /* Popup */] || picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"b\" /* Browser */]) {\n                picker.teardown();\n            }\n        }\n        catch (ex) {\n            this.errorReporter.captureException(ex);\n        }\n    };\n    PickerFacade.prototype.setUploadParams = function (params) {\n        this.picker.setUploadParams(params);\n    };\n    PickerFacade.prototype.onClose = function (cb) {\n        var picker = this.picker;\n        if (picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"f\" /* Popup */]) {\n            picker.on('closed', cb);\n            return function () { return picker.off('closed', cb); };\n        }\n        return function () { };\n    };\n    PickerFacade.prototype.activate = function () {\n        var picker = this.picker;\n        if (picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"d\" /* Dropzone */] || picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"c\" /* Clipboard */]) {\n            picker.activate();\n        }\n    };\n    PickerFacade.prototype.deactivate = function () {\n        var picker = this.picker;\n        if (picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"d\" /* Dropzone */] || picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"c\" /* Clipboard */]) {\n            picker.deactivate();\n        }\n    };\n    PickerFacade.prototype.show = function () {\n        if (this.picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"f\" /* Popup */]) {\n            try {\n                this.picker.show();\n            }\n            catch (ex) {\n                this.errorReporter.captureException(ex);\n            }\n        }\n        else if (this.picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"b\" /* Browser */]) {\n            this.picker.browse();\n        }\n    };\n    PickerFacade.prototype.hide = function () {\n        if (this.picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"f\" /* Popup */]) {\n            this.picker.hide();\n        }\n    };\n    PickerFacade.prototype.cancel = function (tempId) {\n        if (this.picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"f\" /* Popup */]) {\n            var state = this.stateManager.getState(tempId);\n            if (!state || state.status === 'cancelled') {\n                return;\n            }\n            try {\n                this.picker.cancel(tempId);\n            }\n            catch (e) {\n                // We're deliberately consuming a known Media Picker exception, as it seems that\n                // the picker has problems cancelling uploads before the popup picker has been shown\n                // TODO: remove after fixing https://jira.atlassian.com/browse/FIL-4161\n                if (!/((popupIframe|cancelUpload).*?undefined)|(undefined.*?(popupIframe|cancelUpload))/.test(\"\" + e)) {\n                    throw e;\n                }\n            }\n            this.stateManager.updateState(tempId, {\n                id: tempId,\n                status: 'cancelled',\n            });\n        }\n    };\n    PickerFacade.prototype.upload = function (url, fileName) {\n        if (this.picker instanceof __WEBPACK_IMPORTED_MODULE_0__atlaskit_media_picker__[\"a\" /* BinaryUploader */]) {\n            this.picker.upload(url, fileName);\n        }\n    };\n    PickerFacade.prototype.onNewMedia = function (cb) {\n        this.onStartListeners.push(cb);\n    };\n    PickerFacade.prototype.onDrag = function (cb) {\n        this.onDragListeners.push(cb);\n    };\n    PickerFacade.prototype.generateTempId = function (id) {\n        return \"temporary:\" + id;\n    };\n    return PickerFacade;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (PickerFacade);\n//# sourceMappingURL=picker-facade.js.map\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4087\n");

/***/ })

});